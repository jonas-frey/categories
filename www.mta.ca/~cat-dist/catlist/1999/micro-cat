Date: Sat, 12 Jul 1997 14:57:22 -0300 (ADT)
Subject: Interesting item for categories 

Date: Fri, 11 Jul 1997 18:41:36 -0400
From: Michael Barr <barr@triples.math.mcgill.ca>

I just got this from Adam.  I think it might be interesting to post.

Mike

>From adamba@microsoft.com Fri Jul 11 14:09:13 1997
Received: from mail5.microsoft.com (mail5.microsoft.com [131.107.3.31]) by triples.math.mcgill.ca (8.6.8/8.6.6) with ESMTP id OAA04707 for <barr@triples.math.mcgill.ca>; Fri, 11 Jul 1997 14:09:12 -0400
Received: by mail5.microsoft.com with Internet Mail Service (5.0.1458.49)
	id <3W9L4D7D>; Fri, 11 Jul 1997 11:16:22 -0700
Message-ID: <9D311811F5DFD011A37800805FD4BA8803A91B@RED-66-MSG.dns.microsoft.com>
From: "Adam Barr (Win NT)" <adamba@microsoft.com>
To: "'barr@triples.math.mcgill.ca'" <barr@triples.math.mcgill.ca>
Subject: lecture abstract
Date: Fri, 11 Jul 1997 11:14:29 -0700
X-Priority: 3
X-Mailer: Internet Mail Service (5.0.1458.49)
Status: R

This is a talk at Microsoft -- the abstract mentions category theory!!

- adam


************************************************************************
********
WHO:				Erik Meijer
AFFILIATION:		Utrecht University, The Netherlands
TITLE:				The Next 700 Scripting Languages, or COM
meets Functional Programming
WHEN:				Wednesday July 16, 1997
WHERE:			9s/1007
TIME:				3:00-4:30
HOST:				Conal Elliott
VIDEO                    Not Available
************************************************************************
*******

Please pass on this information to any other interested internal
employees.


The Next 700 Scripting Languages, or COM meets Functional Programming

More than 30 years ago, Peter Landin proposed to define domain specific
languages by embedding them into the purely functional host language
ISWIM.
The host language captures how things are described in terms of other
things, and is specialized for a certain problem domain by an
appropriate choice of primitive operations. 
In 1997-speak, we would say that Landin proposed to have a single
scripting language to glue together application specific software
components. This is very similar to using Visual Basic for scripting
COM/ActiveX components.
For a purely functional language however, it is easier said than done;
especially if we want to introduce impure, side-effecting, primitives.
Surprisingly,  it turns out that the concept of monads from category
theory provides an elegant solution to the problem of integrating
interaction in a purely functional language. Finally, after 30 years,
Landin's idea can be put into practice, and Fran, Haskell/CGI, Haskore,
Tk/Gofer, AgentScript, and the Haskell-COM integration are collectively
becoming a nice proof of concept.
In this talk we will argue why we think lazy functional language (such
as Haskell) are especially suited as scripting languages as they allow
users to define their own control structures, or as we say, combinators.
During the talk, the Microsoft Agent genie will navigate the Microsoft
internet Explorer through a tour of dynamically generated HTML pages,
everything scripted in Haskell.

Biography
=======

Erik Meijer is currently a visiting research professor at the Oregon
Graduate Institute, on leave from Utrecht University in The Netherlands.
He is known from his theoretical work on functional programming
(Squiggol) and compiler construction, but now spends his time on
practical applications of functional programming, especially promoting
them as scripting languages. He is recently working on making COM
components available from Haskell and encapsulating Haskell programs as
COM components, and is a member of the Standard Haskell Committee.
Home Page : http://tibet.cse.ogi.edu/Personal/Default.html" .

msrlecture


