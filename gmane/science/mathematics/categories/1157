Path: news.gmane.org!not-for-mail
From: Michael Barr <barr@barrs.org>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: an early exercise in Mac Lane
Date: Fri, 9 Jul 1999 16:05:05 -0400 (EDT)
Lines: 44
Approved: news@gmane.org
Message-ID: <Pine.LNX.4.04.9907091600560.9544-100000@triples.math.mcgill.ca>
NNTP-Posting-Host: main.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: ger.gmane.org 1241017604 29739 80.91.229.2 (29 Apr 2009 15:06:44 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:06:44 +0000 (UTC)
To: categories <categories@mta.ca>
Original-X-From: cat-dist Sat Jul 10 11:23:07 1999
Original-Received: (from Majordom@localhost)
	by mailserv.mta.ca (8.9.3/8.9.3) id KAA27986
	for categories-list; Sat, 10 Jul 1999 10:23:48 -0300 (ADT)
X-Authentication-Warning: triples.math.mcgill.ca: barr owned process doing -bs
X-Sender: barr@triples.math.mcgill.ca
Original-Sender: cat-dist@mta.ca
Precedence: bulk
Status: O
Content-Length: 1587
Original-Lines: 43
Xref: news.gmane.org gmane.science.mathematics.categories:1157
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/1157>

I am afraid that does not work.  You have to take an identity to an
identity.  The suggested conjugation by choosing an automorphism for each
object does that.  It may be the answer Mac Lane had in mind, although
that works for any category, as noted.  I cannot think of any other
example.


-------------------------------------------------------------------
If a society puts up with bad plumbers because plumbing is such a low
calling, and if it puts up with bad philosophers because philosophy is
such a high calling---then neither its pipes nor its theories will hold
water.  --- Slight paraphrase of former HEW secretary John Gardner

On Fri, 9 Jul 1999, john baez wrote:

> Lyle Ramshaw writes:
> 
> >   5. Find two different functors T: Grp --> Grp with object function
> >   T(G) = G the identity for every group G.
> > 
> > One such functor, of course, is the identity on every arrow as well.
> > So the challenge is to find a functor that leaves all objects
> > unchanged, but changes around at least some arrows.
> 
> > I've spent some time trying to construct a more interesting solution
> > to the exercise: a functor from Grp to Grp that leaves objects alone
> > and transforms arrows in some way that clearly changes the structure.
> > In particular, I started out hoping to take some non-null arrows to
> > null arrows.  
> 
> I assume that by "null arrow" you mean what some folks call "the trivial
> homomorphism".  
> 
> Why not go all the way and consider the functor that leaves objects
> alone and maps all arrows to null arrows?
> 
> Best,
> John Baez
> 
> 
> 



