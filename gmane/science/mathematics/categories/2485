Path: news.gmane.org!not-for-mail
From: "Fred E.J. Linton" <fejlinton@usa.net>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: quantum logic
Date: Fri, 24 Oct 2003 03:05:04 -0400
Lines: 129
Approved: news@gmane.org
Message-ID: <3F98CF20.6050907@usa.net>
References: <856HJVsHF4064S16.1066846025@uwdvg016.cms.usa.net> <20031022201258.GF22371@math-rs-n03.ucr.edu>
NNTP-Posting-Host: main.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Trace: ger.gmane.org 1241018698 4374 80.91.229.2 (29 Apr 2009 15:24:58 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:24:58 +0000 (UTC)
To: categories <categories@mta.ca>
Original-X-From: rrosebru@mta.ca Sat Oct 25 08:48:39 2003 -0300
Return-path: <cat-dist@mta.ca>
Envelope-to: categories-list@mta.ca
Delivery-date: Sat, 25 Oct 2003 08:48:39 -0300
Original-Received: from Majordom by mailserv.mta.ca with local (Exim 4.10)
	id 1ADMrp-0001xM-00
	for categories-list@mta.ca; Sat, 25 Oct 2003 08:46:01 -0300
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.0.1) Gecko/20020823 Netscape/7.0 (nscd2)
Original-Sender: cat-dist@mta.ca
Precedence: bulk
X-Keywords: 
X-UID: 36
Status: O
Content-Length: 5622
Original-Lines: 128
Xref: news.gmane.org gmane.science.mathematics.categories:2485
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/2485>

Toby Bartels wrote:

 > For finitary products/coproducts, the L-p style norm will work for any p,
 > which is no surprise since the results are isomorphic (in either
category).
 > In fact, we get a biproduct diagram that works regardless of norm
 > (so long as the projections and injections are norm-reducing).

Sorry, in the maps-norm-decreasing, disk-as-underlying-set category,
even  RxR  gives you isometrically different Banach spaces for different
values of  p .(*)  Only the L-1 style norm gives you a coproduct,
only the L-infinity style norm gives you a product (using the
usual "as-vector-space" injections and projections); the other
choices of  p  give you god-only-knows-what.

As regards another point, I think this is dead wrong:

 > The L-oo style full direct product and the L-1 style weak direct product
 > work as (respectively) product and coproduct using /either/ hom-set
 > (and hence using either corresponding choice of underlying-set functor).
 > This is because |f| <= sup_i |f_i| holds (for both product and coproduct,
 > albeit by a different calculation for L-oo product than for L-1
coproduct).

Here's why: a bounded linear transformation to the L-oo style product
of a bunch of real lines, say (in the real Banach space case) arises
from a BOUNDED family of bounded linear functionals.  An UNbounded
family of bounded linear functionals WILL give you a continuous linear
transformation, of course, but NOT to the L-oo style product of  R 's
-- it will be taking values in the topological-vector-space product
of those  R 's.

Same problem, in reverse, for the L-1 style weak direct product as
coproduct: the bounded maps from, say, l_1(aleph-0) to a Banach space  B
correspond, after composing with the injections, to BOUNDED families
of maps  R --> B  (i.e., bounded families of vectors in  B ).
But ARBITRARY families of maps  R --> B  should have a common
extension to a continuous map from the coproduct of those  R 's.
So their L-1 style weak direct product (which is what l_1(aleph-0) is)
won't be the coproduct in the continuous-linear-transformation category.

Eilenberg, may he rest in peace, once summed up the dilemma:
are you talking about Banach spaces? or about Banachable spaces?
(Banachable spaces are topological vector spaces, complete in
their (uniform) topology, whose topology can come from a norm.)
In the latter case, continuous linear transformations
are all there is.  And if you want invertible bounded
linear transformations to be isomorphisms, Banachable
spaces is all you can be capturing.  But products, as
topological vector spaces, of too many Banachable spaces
are no longer Banachable; and coproducts ... are no longer
even uniformly complete.  So if you want to talk about
Banach spaces, with the expected L-1 style weak products
as coproducts and the expected L-oo style products as products,
then you are obviously focussed on the norms, and you've
got to be focussed on maps that don't increase the norms,
for otherwise you're only focussing on the Banachable aspect
of the topological vector spaces underlying your Banach spaces.

As to other remarks:

> If I were talking with John Baez, and he had just said
> that he was accepting all bounded linear maps as morphism,
> then I /would/ dare call an invertible bounded linear map an isomorphism,
> because it would in fact /be/ an isomorphism in that category.

And I'd understand he was interested only in Banachable TVSes, and
not actually in Banach spaces.

> (But in a general context, I would call /only/ isometries isomorphisms,
> because otherwise people might get confused about what I meant!)

This would tell me you're interested not merely in Banachable
spaces, but in actual Banach spaces.

> I say this just to remind us that we're discussing which category is /best/,
> not which category is /correct/.

Both categories (Banach spaces -- with norm-non-increasing maps,
and Banachable spaces, with continuous linear transformations)
are useful categories.  But even their objects are different, not
just the maps allowed between two particular Banach spaces.

> (There's the additional matter that the "unit disk functor"
> isn't a functor at all if all bounded linear maps are morphisms,
> but the correspondence is stronger than that.)

That's because Banachable spaces have no unit disks -- it's
not that "the 'unit disk functor' isn't a functor at all,"
it's that there isn't even a CANDIDATE for object-function
of a putative unit disk functor!

Nonetheless, both categories -- Ban , and  Banachable -- though
far from equivalent, have their uses.

And  Ban , though not monadic over  Sets  via its unit disk functor, as
Mike Barr has correctly pointed out, IS a full reflective subcategory
of the category of algebras over the monad for that unit-disk functor;
in that regard, it somewhat resembles the category of torsion-free
abelian groups (likewise not monadic, yet fully reflective in the
category of algebras for its underlying set functor, viz., in Ab.Gps).

Hope these comments help.

(*)PS: by a fluke, l_1(n) and l_oo(n)
can be made isometric, for n=2:

send (1, 0) in l_1(2) to (1, 1) in l_oo(2), and
send (0, 1) in l_1(2) to (-1, 1) in l_oo(2), and
extend by linearity.

This is the linear map  R^2 --> R^2  that rotates by 45 degrees
and then multiplies by  square.root(2) , and it carries
the l_1 unit diamond onto the l_oo unit square.

I don't think anything like this can work for exhibiting
isometries between l_1(2) and l_p(2) for any other p,
and I don't think anything like this can work for l_1(n) and l_oo(n)
for any n > 2.

But enough for now.

-- F.






