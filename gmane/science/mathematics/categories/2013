Path: news.gmane.org!not-for-mail
From: Paul Taylor <pt@dcs.qmw.ac.uk>
Newsgroups: gmane.science.mathematics.categories
Subject: Abstract Stone Duality update
Date: Thu, 14 Jun 2001 17:54:10 +0100
Lines: 63
Approved: news@gmane.org
Message-ID: <E15AaNm-0007SG-00@koi-pc>
NNTP-Posting-Host: main.gmane.org
X-Trace: ger.gmane.org 1241018282 1723 80.91.229.2 (29 Apr 2009 15:18:02 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:18:02 +0000 (UTC)
To: categories@mta.ca
Original-X-From: rrosebru@mta.ca Thu Jun 14 16:13:42 2001 -0300
Return-Path: <cat-dist@mta.ca>
Original-Received: (from Majordom@localhost)
	by mailserv.mta.ca (8.11.1/8.11.1) id f5EIkO509871
	for categories-list; Thu, 14 Jun 2001 15:46:24 -0300 (ADT)
X-Authentication-Warning: mailserv.mta.ca: Majordom set sender to cat-dist@mta.ca using -f
X-Ident: pt
Original-Sender: cat-dist@mta.ca
Precedence: bulk
X-Keywords: 
X-UID: 24
Status: RO
Content-Length: 3066
Original-Lines: 62
Xref: news.gmane.org gmane.science.mathematics.categories:2013
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/2013>

Abstract Stone Duality is a reaxiomatisation of general topology that
is intended to unify it with recursion theory and translate topological
constructions into executable programs.  In a sense, it turns denotational
semantics on its head: from topology (not just domain theory) to programs.
The underlying idea is Pare's theorem, that the category of "frames" is
both dual to and monadic over the category of "spaces".

The leading concrete examples are
 * the category of locally compact locales and
 * any elementary topos,
so - unlike existing programming languages and formal type theories -
there are "subtypes",  which can be carved out by means of something
like the axiom of comprehension in set theory.

Unfortunately the subject is not yet in a state where I can give an
introduction suitable for either topologists or computer scientists:
I am still building basic categorical structure on the central
hypothesis, and familiarity with Beck's theorem that characterises
monadic adjunction is essential at this stage.

This is just an interim progress report for those that already know
a little about this work.   Links to the published and draft papers are
at	http://www.dcs.qmw.ac.uk/~pt/ASD
or	http://hypatia.dcs.qmw.ac.uk/author/TaylorP

In particular, the paper that I presented at CT2000 in Como,
        Non-Artin Gluing in Recursion Theory and
        Lifting in Abstract Stone Duality
recently came back from the referees and has now been revised.

If you have any comments on this paper, please tell me now so that
they can be incorporated in the revised version.

It contains a counterexample to show that the Artin comma square for
recovering the topology on a space from the topologies of an open subspace
and its closed complement does not work for the analogous lattices of
recursively enumerable subsets of N, considered as Godel numbers for
terminating and non-terminating programs.

However, it analyses the gluing problem a little further, and shows that
the modular law for lattices plays an important part.   On this is built
the construction of the partial map classifier in abstract Stone duality.

The paper follows and relies heavily on
        Geometric and Higher Order Logic in Abstract Stone Duality,
which was published in Theory and Applications of Categories in Dec 2000.

For the past few months I have been working on (the category theory and)
a lambda calculus for the monadic principle that underlies ASD.  This was
presented at the APPSEM workshop in Darmstadt in March.   I was hoping
to have it in a releasable state by now, but, as usual, the paper grew
much too big, so I split it in two, so it lost its narrative structure.
I hope to be able to release a draft of that later in the summer.

The main job for the summer is to get working a prototype compiler that
I started writing last summer, to translate from my comprehension-like
lambda calculus into pure PROLOG.   The reason for choosing PROLOG is 
that its semantics is (amongst existing programming languages) closest
to the semantic ideas in ASD.

Paul


