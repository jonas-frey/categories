Path: news.gmane.org!not-for-mail
From: Paul Taylor <pt@dcs.qmw.ac.uk>
Newsgroups: gmane.science.mathematics.categories
Subject: cartesian closed categories with one object
Date: Mon, 7 Feb 2000 13:28:43 GMT
Lines: 31
Approved: news@gmane.org
Message-ID: <200002071328.NAA19700@koi-pc.dcs.qmw.ac.uk>
NNTP-Posting-Host: main.gmane.org
X-Trace: ger.gmane.org 1241017806 31081 80.91.229.2 (29 Apr 2009 15:10:06 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:10:06 +0000 (UTC)
To: categories@mta.ca
Original-X-From: rrosebru@mta.ca Mon Feb  7 11:24:37 2000 -0400
Original-Received: (from Majordom@localhost)
	by mailserv.mta.ca (8.9.3/8.9.3) id JAA23959
	for categories-list; Mon, 7 Feb 2000 09:44:06 -0400 (AST)
X-Authentication-Warning: mailserv.mta.ca: Majordom set sender to cat-dist@mta.ca using -f
Original-Sender: cat-dist@mta.ca
Precedence: bulk
Status: O
Content-Length: 1116
Original-Lines: 30
Xref: news.gmane.org gmane.science.mathematics.categories:1401
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/1401>

> how to build a cartesian closed category with one object ?

By the letter of the law, a CCC has finite products, including a terminal
object, which is therefore the only object, and its only morphism is the
identity.

By the spirit of the question, there is such a thing as a CCC with one
interesting object D, and one boring one, the terminal object.

What you want, therefore, is [a full subcategory of] a category with an
object D such that
                                       D
		D x D   =    D    =   D

where of course "=" denotes isomorphism, not equality, and the two maps
that form this isomorphism encode a lot of interesting structure.

This structure is known as "the untyped lambda calculus with surjective
pairing", and Dana Scott famously showed how to construct such objects
in the early 1970s.

Joachim Lambek and *Philip* Scott ("Intro to higher order categorical logic")
have a nice discussion that goes from the question of a two-object CCC to
the lambda calculus.

Any account of domain theory will tell how more ways than the world ever
needed to know of constructing these models.

Paul


