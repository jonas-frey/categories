Path: news.gmane.org!not-for-mail
From: =?iso-8859-1?Q?Jean_B=E9nabou?= <jean.benabou@wanadoo.fr>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: A condition for functors to reflect orthogonality
Date: Wed, 6 Aug 2014 05:08:56 +0200
Lines: 124
Approved: news@gmane.org
Message-ID: <D5600922-7172-4EB2-A8A3-562C7F313B4D@wanadoo.fr>
References: <E1XEfrL-0006No-GW@mlist.mta.ca>
Reply-To: =?iso-8859-1?Q?Jean_B=E9nabou?= <jean.benabou@wanadoo.fr>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0 (Apple Message framework v1283)
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
X-Trace: ger.gmane.org 1407372750 28347 80.91.229.3 (7 Aug 2014 00:52:30 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Thu, 7 Aug 2014 00:52:30 +0000 (UTC)
Cc: categories list <categories@mta.ca>
To: Zhen Lin Low <zll22@cam.ac.uk>,
Original-X-From: majordomo@mlist.mta.ca Thu Aug 07 02:52:25 2014
Return-path: <majordomo@mlist.mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from smtp3.mta.ca ([138.73.1.186])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1XFBwN-0008AB-Oz
	for gsmc-categories@m.gmane.org; Thu, 07 Aug 2014 02:52:23 +0200
Original-Received: from mlist.mta.ca ([138.73.1.63]:50632)
	by smtp3.mta.ca with esmtp (Exim 4.80)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1XFBvs-0000xE-T4; Wed, 06 Aug 2014 21:51:52 -0300
Original-Received: from majordomo by mlist.mta.ca with local (Exim 4.71)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1XFBvt-0006Ue-FN
	for categories-list@mlist.mta.ca; Wed, 06 Aug 2014 21:51:53 -0300
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:8287
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/8287>

Dear Zhen Lin,
=20
Before I answer your question let me give names to arbitrary maps of C:
f: X --> Y,  g: Z --> W,  x: Z -->X,  y: W --> Y and h: W --> X . Your =
condition reads:
for every pair (f,g) and every triple (x,y,h') where:
  yg =3D fx and  h': UW --> UX  satisfies :  h' Ug =3D Ux  and  Uf h' =3D =
Uy,
there exits a unique h: W -->X  such that:  Uh =3D h',  hg =3D x  and fh =
=3D y .=20
One verifies first that this condition is satisfied for all pairs (f,g) =
iff it is satisfied for f arbitrary and g is an identity.
In that case that means that f is what I call hypercartesian (which in =
the anglo-american literature is called cartesian). Since f is arbitrary =
, the condition becomes:=20
(i) Every map of C is hyper cartesian.
Let me call U locally full and faithful (lff) iff for every object X of =
C the obvious functor =20
C/X --> D/UX  is full and fathull.
In my mail to Joyal and the catgory list, dated July 28 I already =
mentioned that (i) is equivalent to
(ii) U is lff.
I also said, it is obvious, that U full and faithful =3D> U is lff .=20
I mentioned also the case of groupoids, with a sharper result than the =
one you stated, namely: If C is a groupoid, every functor U: C --> D, =
where D is arbitrary, is lff.

Let me add a remark which was not in my mail to Joyal, namely, the =
previous property characterizes groupoids. More precisely we have:

PROPOSITION 1. Let C be a category. The following are equivalent:
(i) C is a groupoid
(ii) Every functor with domain C is lff
(iii) The unique functor C --> 1 is lff.

There are MANY MORE properties of lff functors which would be too long =
to give here.
Let me mention a few which are not in my mail to Joyal.
  The following theorem generalizes greatly the previous proposition.

THEOREM. Let  U: C --> D be a fibration. The following are equivalent:
(i) U is lff
(ii) All the fibers of U are groupoids.
(iii) U is conservative (i.e. reflects isomorphisms).

Such fibrations are very important. Because of (ii) they have sometimes =
been called groupoid fibrations. In particular, it follows from (iii), =
that for such a fibration if D is a groupoid so is C.

You said that the functors satisfying your condition are stable by =
composition. This result can be strengthened since we have:

PROPOSITION 2. Let  U and V be functors such that the composite UV is =
defined.=20
If U is lff, then UV is lff iff V is.

The following result is easy to prove but nevertheless important for =
many theoretical reasons.

THEOREM 2. lff functors are stable by pull back along any functor.

I could add many significant results, in particular about cartesian =
functors, or orthogonality but this mail is already a bit long, and I =
apologize for this length.
Thus  there is no need to give a name to the property you mentioned, =
locally full and faithful describes precisely this property.

Best wishes,
Jean=20


Le 4 ao=FBt 2014 =E0 20:24, Zhen Lin Low a =E9crit :

> Dear categorists,
>=20
> I am wondering if the following property of a functor U : C -> D has a =
name
> in the literature:
>=20
> * For every lifting problem in C and any solution in D to the image =
under
> U, there is a unique solution in C whose image under U is that =
solution.
>=20
> More precisely:
>=20
> * For any morphisms X -> Y and Z -> W in C, the induced commutative =
diagram
>=20
>      C(W, X) ------> C(Z, X) \times_{C(Z, Y)} C(W, Y)
>         |                            |
>         |                            |
>         v                            v
>     D(UW, UX) --> D(UZ, UX) \times_{D(UZ, UY)} D(UW, UY)
>=20
>   is a pullback square.
>=20
> Of course, any fully faithful functor has the property in question; a =
less
> trivial example is the projection from a (co)slice category to its =
base.
> Every functor between groupoids has this property, so they need not be
> faithful. One also notes that the class of functors with this property =
is
> closed under composition.
>=20
> It is not hard to see that if a functor has the above property, then =
it
> reflects both orthogonality and weak orthogonality in the naive sense. =
The
> converse is false. Nonetheless, my inclination is to call these =
functors
> "orthogonality-reflecting".
>=20
> Best wishes,
> --
> Zhen Lin
>=20
>=20



[For admin and other information see: http://www.mta.ca/~cat-dist/ ]

