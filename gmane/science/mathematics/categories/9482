Path: news.gmane.org!.POSTED!not-for-mail
From: =?UTF-8?B?RGV2cmltIMOcbmFs?= <devrimunal@gmail.com>
Newsgroups: gmane.science.mathematics.logic.coq.club,gmane.science.mathematics.categories
Subject: Re: [TYPES/announce] Tenure-Track Research and Teaching
 Positions at University of British Columbia, Vancouver, Canada
Date: Mon, 1 Jan 2018 21:11:46 +0300
Lines: 341
Approved: news@gmane.org
Message-ID: <CAEyNXA-kY2ty2czLU41PS0dFyZv7Vep_cAEF4A2x8oKn+xzMWQ@mail.gmail.com>
References: <8CD7DB5F-B95E-4FBA-B93E-0AAFB99ABDE9@cs.ubc.ca> <CANqbe0X6_9Qm00Xc7KuMFGrvqjTyQ+gq4t5QyQaEgX9+S9g8hQ@mail.gmail.com>
Reply-To: coq-club@inria.fr
NNTP-Posting-Host: blaine.gmane.org
Mime-Version: 1.0
Content-Type: multipart/alternative; boundary="001a1141fd728487f70561baebba"
X-Trace: blaine.gmane.org 1514830251 30797 195.159.176.226 (1 Jan 2018 18:10:51 GMT)
X-Complaints-To: usenet@blaine.gmane.org
NNTP-Posting-Date: Mon, 1 Jan 2018 18:10:51 +0000 (UTC)
Cc: Ronald Garcia <rxg@cs.ubc.ca>, types-list@lists.seas.upenn.edu, categories@mta.ca
To: coq-club@inria.fr
Original-X-From: coq-club-owner@inria.fr Mon Jan 01 19:10:47 2018
Return-path: <coq-club-owner@inria.fr>
Envelope-to: gsmlcc-coq-club@gmane.org
Original-Received: from mxfilter-048035.atla03.us.yomura.com ([107.189.48.35])
	by blaine.gmane.org with esmtp (Exim 4.84_2)
	(envelope-from <coq-club-owner@inria.fr>)
	id 1eW4Xp-0007NY-5H
	for gsmlcc-coq-club@gmane.org; Mon, 01 Jan 2018 19:10:41 +0100
X-Yomura-MXScrub: 1.0
Original-Received: from mail2-relais-roc.national.inria.fr (unknown [192.134.164.83])
	by mxfilter-048035.atla03.us.yomura.com (Halon) with ESMTP
	id 4e5ea688-ef1f-11e7-94e8-b499baabecb2;
	Mon, 01 Jan 2018 18:12:20 +0000 (UTC)
X-IronPort-AV: E=Sophos;i="5.45,492,1508796000"; 
   d="scan'208,217";a="307329115"
Original-Received: from sympa.inria.fr ([193.51.193.213])
  by mail2-relais-roc.national.inria.fr with ESMTP; 01 Jan 2018 19:12:17 +0100
Original-Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 534B8823D0; Mon,  1 Jan 2018 19:12:17 +0100 (CET)
X-Original-To: coq-club@sympa.inria.fr
Delivered-To: coq-club@sympa.inria.fr
Original-Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id E4FE182355
	for <coq-club@sympa.inria.fr>; Mon,  1 Jan 2018 19:12:09 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=devrimunal@gmail.com; spf=Pass smtp.mailfrom=devrimunal@gmail.com; spf=None smtp.helo=postmaster@mail-qt0-f194.google.com
IronPort-PHdr: =?us-ascii?q?9a23=3A+UIEPRMpky48JF8mfZAl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0Iv3zrarrMEGX3/hxlliBBdydt6odzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlViDanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?gFOT438G/ZhM9tgqxFvB2svAZwz5LObYyPKPZyYqHQcNUHTmRBRMZRUClBD5uy?=
 =?us-ascii?q?YYQREeoBJ+dYr4zgrF0QqxuxHw2sD/7oxzBVmHD2w7c60+UkEQHb2gwvBdYOvW?=
 =?us-ascii?q?/brNXwLqgSUOS1wLPUwjXEavNbwDHw45XGfBAmpPGDR7NwcczJxEk3DQzEjk2Q?=
 =?us-ascii?q?ppbhPz+P0+QCrXCX4PBlVe21im8nrAdxriKzyccrj4nFno0VylHY9SV53YY6Ps?=
 =?us-ascii?q?e0R1J8Yd6hCJdRtyaaN5ZqQsM/WG5npjw2xaEBuZ6+ZCQKx5UnxwLBZPOZaYSH?=
 =?us-ascii?q?/hXjVOOXLDxlh3xlYK 
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C0AgAueUpaf8LYVdFdAQIIAg4BAQEBA?=
 =?us-ascii?q?wEBAQkBAQGDZT90IAcHhACBOZgBggGXPoEiA1wKI4RJTwJKg18HQxQBAQEBAQE?=
 =?us-ascii?q?BAQEBEgEBCQsLCCYxQg4BgWcigkoBAgIBIx0BGwUFDAcBAwELBgMCCwUDKAcCA?=
 =?us-ascii?q?iEBAREBBQEcEAkWBYl6AQMNCAkHk2mRHUCMEIIFBQEcgwsFg1kKGScNDUwxgWY?=
 =?us-ascii?q?BAQEBAQUBAQEBAQEBAQEBARUCBhKDdgSCEoY7MoIMX0QBGIEjARIBTIJqgmUFk?=
 =?us-ascii?q?y6PYT2IA4g0hH6CF2WFMYtQjSQ+QohLFAUggRc2gQJvb4EEgXcJCoIIKg8cGYF?=
 =?us-ascii?q?RPjeBQYUEBAsYgiMBAQE?=
X-IPAS-Result: =?us-ascii?q?A0C0AgAueUpaf8LYVdFdAQIIAg4BAQEBAwEBAQkBAQGDZT9?=
 =?us-ascii?q?0IAcHhACBOZgBggGXPoEiA1wKI4RJTwJKg18HQxQBAQEBAQEBAQEBEgEBCQsLC?=
 =?us-ascii?q?CYxQg4BgWcigkoBAgIBIx0BGwUFDAcBAwELBgMCCwUDKAcCAiEBAREBBQEcEAk?=
 =?us-ascii?q?WBYl6AQMNCAkHk2mRHUCMEIIFBQEcgwsFg1kKGScNDUwxgWYBAQEBAQUBAQEBA?=
 =?us-ascii?q?QEBAQEBARUCBhKDdgSCEoY7MoIMX0QBGIEjARIBTIJqgmUFky6PYT2IA4g0hH6?=
 =?us-ascii?q?CF2WFMYtQjSQ+QohLFAUggRc2gQJvb4EEgXcJCoIIKg8cGYFRPjeBQYUEBAsYg?=
 =?us-ascii?q?iMBAQE?=
X-IronPort-AV: E=Sophos;i="5.45,492,1508796000"; 
   d="scan'208,217";a="307329079"
Original-Received: from mail-qt0-f194.google.com ([209.85.216.194])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 01 Jan 2018 19:12:08 +0100
Original-Received: by mail-qt0-f194.google.com with SMTP id m59so60620384qte.11
        for <coq-club@inria.fr>; Mon, 01 Jan 2018 10:12:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=RvMyk+QL1mPe7elzK6MBa7xUKK0MPOKB9x4kUctxmR0=;
        b=ZgYU29Y5DdReBsDkK4Hswv2ct2JIuNXFKWy+yp3/C4p4owe6Qz3KJZNHysNqNiD6KI
         HVhTQGDvmnWdjDkpN8n6YSyeuKKOji0FlPAWoCkt/jixHJ5xY2fxtg5N8LgStmI0Yhmb
         chqAN5dSyoJfIXF2+P1XFSgzsdLUI+GcynePCUmve0WG4sG2TDXVcIizXg27yBjSQNpW
         1EmBXD9gKs3XcoQHhvxtRk2yvslftausbj7e0H1fGY7UufAk/tJ7CzwmQCtLKZmxfqU8
         NNf/PYhgPNT+gX2Hv6NJK50ZO2l3JEEbjKoYO8DmzThTG8IRjXMC39XgFdkMekmBmg7U
         vlgg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=RvMyk+QL1mPe7elzK6MBa7xUKK0MPOKB9x4kUctxmR0=;
        b=p8p1aUx676HUfzMdvEbOpF2/XgXKN1mzeWNqbP82LwVY2BNfJHrLkwJyYO/y8pvPLv
         flnt4OTq6vN+aWEmQNCDUHpqRhgYkKhTQcHlDMJ6+Oi0/UJROQdVnDou+RdF+l9d0bJl
         tFGv5pMWMSY29ZfN8NJv246RGuPqYg/hqy/bsHKR9uRmrMywWNtnzPEkb8AGjiO5eWbQ
         uHVh6DY0BMBuIC133Ul4dGEzmiJgZAWo9Iw2zyTCzL5X3C22I//dt5Rn6ZXbU0VXvk3f
         klKNrnZeMNvs25BucXaKvKzg4mvf9Wl8zYl9ue+9Oh5Ew9lWbZhNNdw9vSbYlb5941PK
         PMVQ==
X-Gm-Message-State: AKGB3mLn9eOZnbCWd+sgwbL0Y6jJCbKsI4Ug6/l90hNnlgoInF+zvVk7
	iOm4T5aGXhRzfkMkao0W2ei+OyYB9KpvWkEDBr/DKg==
X-Google-Smtp-Source: ACJfBovza7abhYDHok3pHxTJW+hsDmirLQGRSc6j3z8rYJirq/iKhKzARVV14/1b5wVWwBWSUjFaMeBahmpQvlxCdIQ=
X-Received: by 10.237.37.85 with SMTP id w21mr38810078qtc.268.1514830326694;
 Mon, 01 Jan 2018 10:12:06 -0800 (PST)
Original-Received: by 10.140.20.214 with HTTP; Mon, 1 Jan 2018 10:11:46 -0800 (PST)
In-Reply-To: <CANqbe0X6_9Qm00Xc7KuMFGrvqjTyQ+gq4t5QyQaEgX9+S9g8hQ@mail.gmail.com>
X-Loop: coq-club@inria.fr
X-Sequence: 15599
Errors-to: coq-club-owner@inria.fr
Precedence: list
Precedence: bulk
Original-Sender: coq-club-request@inria.fr
X-no-archive: yes
List-Id: <coq-club.inria.fr>
List-Archive: <http://sympa.inria.fr/sympa/arc/coq-club>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Owner: <mailto:coq-club-request@inria.fr>
List-Post: <mailto:coq-club@inria.fr>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20coq-club>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20coq-club>
X-Gmane-Expiry: 2018-01-15
Xref: news.gmane.org gmane.science.mathematics.logic.coq.club:20103 gmane.science.mathematics.categories:9482
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.logic.coq.club/20103>

--001a1141fd728487f70561baebba
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

This recent post, looks like a phishing attack email, please beware.

2017-12-31 15:37 GMT+03:00 1337777.OOO <1337777.ooo@gmail.com>:

> Proph
>
> https://gitee.com/OOO1337777/cartier/blob/master/cartierSolution3.v
>
> solves half of some question of Cartier which is how to program
> grammatical polymorph metafunctors-full-subcategory
> containing-equalizers generated by some views ( "complete" ) ...
>
> The ends is to start from some generating/views data and then to add
> equalizers of morphisms ; but where are those equalizers ? Oneself
> could get them as metafunctors on this generating data, as long as
> oneself grammatically distinguishes whatever-is-interesting .
>
> In contrast from the earlier grammatical presentation of
> pairing-projections (product), now the equalizer-objects do depend on
> the morphisms . BUT THIS DEPENDENCE NEED-NOT BE GRAMMATICAL ! This
> dependence could be expressed via the sense-decoding ( "Yoneda" ) of
> the grammatical morphisms .
>
> The grammatical objects/morphisms are simultaneously-mutually
> presented with their sense-decoding ; this could be done via some
> common inductive-recursive presentation or alternatively by inferring
> the sense-decoding computation into extra indexes of the type-family
> of the object/morphisms .
>
> The conversion-relation shall convert across two morphisms whose
> sense-decoding indexes are not syntactically/grammatically-the-same.
> But oneself does show that, by logical-deduction, these two
> sense-decoding are indeed propositionally equal ( "soundness lemma" )
> .
>
> Finally, some linear total/asymptotic grade is defined on the
> morphisms and the tactics-automated degradation lemma shows that each
> of the conversion indeed degrades the redex morphism .
>
> For instant first impression , the conversion-relation constructor
> which says that the inclusion/restriction (projection) morphisms
> cancels the corestriction (pairing) morphism , is written as :
>
> #+BEGIN_EXAMPLE
> | Pairing_Project1 :
>     forall Yoneda00_L Yoneda01_L (L : @obCoMod Yoneda00_L Yoneda01_L)
>       Yoneda00_F Yoneda01_F (F : @obCoMod Yoneda00_F Yoneda01_F)
>       Yoneda00_G Yoneda01_G (G : @obCoMod Yoneda00_G Yoneda01_G),
>     forall Yoneda10_transfL (transfL : 'CoMod(0 F ~> G @ Yoneda10_transfL
> )0)
>       Yoneda10_transfR (transfR : 'CoMod(0 F ~> G @ Yoneda10_transfR )0),
>     forall Yoneda10_ff (ff : 'CoMod(0 L ~> F @ Yoneda10_ff )0),
>     forall (Yoneda10_ff_eq :
>          forall A : obIndexer, proj1_sig Yoneda10_transfL A \o
> proj1_sig Yoneda10_ff A
>                           =3D1 proj1_sig Yoneda10_transfR A \o proj1_sig
> Yoneda10_ff A),
>     forall ( _transfL : 'CoMod(0 F ~> G @ Yoneda10_transfL )0 )
>       ( _transfR : 'CoMod(0 F ~> G @ Yoneda10_transfR )0 )
>       Yoneda00_Z Yoneda01_Z (Z : @obCoMod Yoneda00_Z Yoneda01_Z)
>       Yoneda10_zz (zz : 'CoMod(0 F ~> Z @ Yoneda10_zz )0),
>
>       ( ( ff o>CoMod zz )
>         : 'CoMod(0 L ~> Z @ Yoneda10_PolyCoMod Yoneda10_ff Yoneda10_zz )0=
 )
>         <~~ ( ( ( << ff ,CoMod Yoneda10_ff_eq @ transfL , transfR >> )
>                o>CoMod ( ~_1 @ _transfL , _transfR o>CoMod zz ) )
>         : 'CoMod(0 L ~> Z @ Yoneda10_PolyCoMod (Yoneda10_Pairing
> Yoneda10_ff_eq)
>           (Yoneda10_Project1 Yoneda10_transfL Yoneda10_transfR
> Yoneda10_zz) )0 )
> #+END_EXAMPLE
>
> KEYWORDS : 1337777.OOO ; COQ ; cut-elimination ; equalizers ;
> polymorph metafunctors-grammar ; modos
>
> OUTLINE :
>
>   * Generating-views data
>
>   * Grammatical presentation of objects and morphisms , with
> sense-decoding as metafunctors and metatransformations
>   ** Grammatical presentation of objects
>   ** Grammatical presentation of morphisms
>
>   * Grammatical conversions of morphisms , which infer the same
> sense-decoding
>   ** Grammatical conversions of morphisms
>   ** Same sense-decoding for convertible morphisms
>   ** Linear total/asymptotic grade and the degradation lemma
>
>   * Solution
>   ** Solution morphisms without polymorphism
>   ** Destruction of morphisms with inner-instantiation of object-indexes
>
>   * Polymorphism/cut-elimination by
> computational/total/asymptotic/reduction/(multi-step) resolution
>
> -----
>
> EPILOGUE : Now there is enough data (for multiple masters-engineering)
> to confirm the presence of some MODOS grammar, which is some style of
> "substructural topos" ... where oneself could present grammatical
> polymorph views-data ( "sheaves" ) , grammatical polymorph
> generating-views ( "presentable category" ) , grammatical polymorph
> internal functors ( "internal category" ) , grammatical polymorph
> images ( "regular category" ) , grammatical polymorph unions (
> "coherent category" ) ...
>
> -----
>
> Memo ( "prealables d'un debat" ) ref the unavoidable question : what
> is the ends / added-value / product in mathematics ? The ends are
> commonly described as research , which is the engineering of some
> computational logical computer program or physical prototype (
> "correct" ) , and education , which is the knowing-and-teaching of
> random-moment dia-para-computalogical discoveries ( "ideas" ) .
>
> But where is the money/pay ? Surprisingly even persons capable of very
> complex mathematics can "bug" (
> forced-fool-and-theft/lie/falsification ) on such small questions ...
> reacting with completely pre-formated one-liners .
>
> - whether public review of mathematical-ends is some unlimited
> creation of resource/money/pay ? ( for example ,
> https://github.com/1337777/cartier/issues )
>
> - whether public-university registered-students shall have public
> choice of who is their paid-teachers and where is their paid
> classroom/videostream/book ? ( for example ,
> https://www.youtube.com/watch?v=3DBhWHxiqQzrI&t=3D26m11s )
>
> - whether if 99% of transfer of value occurs via information-knowledge
> then for sure 99% of theft occurs via information-knowledge ? ( for
> example , promotion/publisher by some interdependent-tribalistic
> hidden "reviewer" is qualifiable as misappropriation of public funds )
>
> ... or is ubc not public ?
>
> -----
>
> BUY RECURSIVE T-SQUARE paypal.me/1337777 ; =E5=BE=AE=E4=BF=A1=E6=94=AF=E4=
=BB=98 2796386464@qq.com ;
> eth 0x54810dcb93b37DBE874694407f78959Fa222D920 ; amazon
> amazon.com/hz/wishlist/ls/28SN02HR4EB8W ; irc #OOO1337777
>

--001a1141fd728487f70561baebba
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">This recent post, looks like a phishing attack email, plea=
se beware.<br></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quot=
e">2017-12-31 15:37 GMT+03:00 1337777.OOO <span dir=3D"ltr">&lt;<a href=3D"=
mailto:1337777.ooo@gmail.com" target=3D"_blank">1337777.ooo@gmail.com</a>&g=
t;</span>:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;=
border-left:1px #ccc solid;padding-left:1ex">Proph<br>
<br>
<a href=3D"https://gitee.com/OOO1337777/cartier/blob/master/cartierSolution=
3.v" rel=3D"noreferrer" target=3D"_blank">https://gitee.com/OOO1337777/<wbr=
>cartier/blob/master/<wbr>cartierSolution3.v</a><br>
<br>
solves half of some question of Cartier which is how to program<br>
grammatical polymorph metafunctors-full-subcategory<br>
containing-equalizers generated by some views ( &quot;complete&quot; ) ...<=
br>
<br>
The ends is to start from some generating/views data and then to add<br>
equalizers of morphisms ; but where are those equalizers ? Oneself<br>
could get them as metafunctors on this generating data, as long as<br>
oneself grammatically distinguishes whatever-is-interesting .<br>
<br>
In contrast from the earlier grammatical presentation of<br>
pairing-projections (product), now the equalizer-objects do depend on<br>
the morphisms . BUT THIS DEPENDENCE NEED-NOT BE GRAMMATICAL ! This<br>
dependence could be expressed via the sense-decoding ( &quot;Yoneda&quot; )=
 of<br>
the grammatical morphisms .<br>
<br>
The grammatical objects/morphisms are simultaneously-mutually<br>
presented with their sense-decoding ; this could be done via some<br>
common inductive-recursive presentation or alternatively by inferring<br>
the sense-decoding computation into extra indexes of the type-family<br>
of the object/morphisms .<br>
<br>
The conversion-relation shall convert across two morphisms whose<br>
sense-decoding indexes are not syntactically/grammatically-<wbr>the-same.<b=
r>
But oneself does show that, by logical-deduction, these two<br>
sense-decoding are indeed propositionally equal ( &quot;soundness lemma&quo=
t; )<br>
.<br>
<br>
Finally, some linear total/asymptotic grade is defined on the<br>
morphisms and the tactics-automated degradation lemma shows that each<br>
of the conversion indeed degrades the redex morphism .<br>
<br>
For instant first impression , the conversion-relation constructor<br>
which says that the inclusion/restriction (projection) morphisms<br>
cancels the corestriction (pairing) morphism , is written as :<br>
<br>
#+BEGIN_EXAMPLE<br>
| Pairing_Project1 :<br>
=C2=A0 =C2=A0 forall Yoneda00_L Yoneda01_L (L : @obCoMod Yoneda00_L Yoneda0=
1_L)<br>
=C2=A0 =C2=A0 =C2=A0 Yoneda00_F Yoneda01_F (F : @obCoMod Yoneda00_F Yoneda0=
1_F)<br>
=C2=A0 =C2=A0 =C2=A0 Yoneda00_G Yoneda01_G (G : @obCoMod Yoneda00_G Yoneda0=
1_G),<br>
=C2=A0 =C2=A0 forall Yoneda10_transfL (transfL : &#39;CoMod(0 F ~&gt; G @ Y=
oneda10_transfL )0)<br>
=C2=A0 =C2=A0 =C2=A0 Yoneda10_transfR (transfR : &#39;CoMod(0 F ~&gt; G @ Y=
oneda10_transfR )0),<br>
=C2=A0 =C2=A0 forall Yoneda10_ff (ff : &#39;CoMod(0 L ~&gt; F @ Yoneda10_ff=
 )0),<br>
=C2=A0 =C2=A0 forall (Yoneda10_ff_eq :<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0forall A : obIndexer, proj1_sig Yoneda10_=
transfL A \o<br>
proj1_sig Yoneda10_ff A<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =3D1 proj1_sig Yoneda10_transfR A \o proj1_sig<br>
Yoneda10_ff A),<br>
=C2=A0 =C2=A0 forall ( _transfL : &#39;CoMod(0 F ~&gt; G @ Yoneda10_transfL=
 )0 )<br>
=C2=A0 =C2=A0 =C2=A0 ( _transfR : &#39;CoMod(0 F ~&gt; G @ Yoneda10_transfR=
 )0 )<br>
=C2=A0 =C2=A0 =C2=A0 Yoneda00_Z Yoneda01_Z (Z : @obCoMod Yoneda00_Z Yoneda0=
1_Z)<br>
=C2=A0 =C2=A0 =C2=A0 Yoneda10_zz (zz : &#39;CoMod(0 F ~&gt; Z @ Yoneda10_zz=
 )0),<br>
<br>
=C2=A0 =C2=A0 =C2=A0 ( ( ff o&gt;CoMod zz )<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 : &#39;CoMod(0 L ~&gt; Z @ Yoneda10_PolyCoMod Y=
oneda10_ff Yoneda10_zz )0 )<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;~~ ( ( ( &lt;&lt; ff ,CoMod Yoneda10_ff_eq =
@ transfL , transfR &gt;&gt; )<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0o&gt;CoMod ( ~_1 @ _=
transfL , _transfR o&gt;CoMod zz ) )<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 : &#39;CoMod(0 L ~&gt; Z @ Yoneda10_PolyCoMod (=
Yoneda10_Pairing Yoneda10_ff_eq)<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (Yoneda10_Project1 Yoneda10_transfL Yone=
da10_transfR Yoneda10_zz) )0 )<br>
#+END_EXAMPLE<br>
<br>
KEYWORDS : 1337777.OOO ; COQ ; cut-elimination ; equalizers ;<br>
polymorph metafunctors-grammar ; modos<br>
<br>
OUTLINE :<br>
<br>
=C2=A0 * Generating-views data<br>
<br>
=C2=A0 * Grammatical presentation of objects and morphisms , with<br>
sense-decoding as metafunctors and metatransformations<br>
=C2=A0 ** Grammatical presentation of objects<br>
=C2=A0 ** Grammatical presentation of morphisms<br>
<br>
=C2=A0 * Grammatical conversions of morphisms , which infer the same sense-=
decoding<br>
=C2=A0 ** Grammatical conversions of morphisms<br>
=C2=A0 ** Same sense-decoding for convertible morphisms<br>
=C2=A0 ** Linear total/asymptotic grade and the degradation lemma<br>
<br>
=C2=A0 * Solution<br>
=C2=A0 ** Solution morphisms without polymorphism<br>
=C2=A0 ** Destruction of morphisms with inner-instantiation of object-index=
es<br>
<br>
=C2=A0 * Polymorphism/cut-elimination by<br>
computational/total/<wbr>asymptotic/reduction/(multi-<wbr>step) resolution<=
br>
<br>
-----<br>
<br>
EPILOGUE : Now there is enough data (for multiple masters-engineering)<br>
to confirm the presence of some MODOS grammar, which is some style of<br>
&quot;substructural topos&quot; ... where oneself could present grammatical=
<br>
polymorph views-data ( &quot;sheaves&quot; ) , grammatical polymorph<br>
generating-views ( &quot;presentable category&quot; ) , grammatical polymor=
ph<br>
internal functors ( &quot;internal category&quot; ) , grammatical polymorph=
<br>
images ( &quot;regular category&quot; ) , grammatical polymorph unions (<br=
>
&quot;coherent category&quot; ) ...<br>
<br>
-----<br>
<br>
Memo ( &quot;prealables d&#39;un debat&quot; ) ref the unavoidable question=
 : what<br>
is the ends / added-value / product in mathematics ? The ends are<br>
commonly described as research , which is the engineering of some<br>
computational logical computer program or physical prototype (<br>
&quot;correct&quot; ) , and education , which is the knowing-and-teaching o=
f<br>
random-moment dia-para-computalogical discoveries ( &quot;ideas&quot; ) .<b=
r>
<br>
But where is the money/pay ? Surprisingly even persons capable of very<br>
complex mathematics can &quot;bug&quot; (<br>
forced-fool-and-theft/lie/<wbr>falsification ) on such small questions ...<=
br>
reacting with completely pre-formated one-liners .<br>
<br>
- whether public review of mathematical-ends is some unlimited<br>
creation of resource/money/pay ? ( for example ,<br>
<a href=3D"https://github.com/1337777/cartier/issues" rel=3D"noreferrer" ta=
rget=3D"_blank">https://github.com/1337777/<wbr>cartier/issues</a> )<br>
<br>
- whether public-university registered-students shall have public<br>
choice of who is their paid-teachers and where is their paid<br>
classroom/videostream/book ? ( for example ,<br>
<a href=3D"https://www.youtube.com/watch?v=3DBhWHxiqQzrI&amp;t=3D26m11s" re=
l=3D"noreferrer" target=3D"_blank">https://www.youtube.com/watch?<wbr>v=3DB=
hWHxiqQzrI&amp;t=3D26m11s</a> )<br>
<br>
- whether if 99% of transfer of value occurs via information-knowledge<br>
then for sure 99% of theft occurs via information-knowledge ? ( for<br>
example , promotion/publisher by some interdependent-tribalistic<br>
hidden &quot;reviewer&quot; is qualifiable as misappropriation of public fu=
nds )<br>
<br>
... or is ubc not public ?<br>
<br>
-----<br>
<br>
BUY RECURSIVE T-SQUARE <a href=3D"http://paypal.me/1337777" rel=3D"noreferr=
er" target=3D"_blank">paypal.me/1337777</a> ; =E5=BE=AE=E4=BF=A1=E6=94=AF=
=E4=BB=98 <a href=3D"mailto:2796386464@qq.com">2796386464@qq.com</a> ;<br>
eth 0x54810dcb93b37DBE874694407f78<wbr>959Fa222D920 ; amazon<br>
<a href=3D"http://amazon.com/hz/wishlist/ls/28SN02HR4EB8W" rel=3D"noreferre=
r" target=3D"_blank">amazon.com/hz/wishlist/ls/<wbr>28SN02HR4EB8W</a> ; irc=
 #OOO1337777<br>
</blockquote></div><br></div>

--001a1141fd728487f70561baebba--

