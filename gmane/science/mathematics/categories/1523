Path: news.gmane.org!not-for-mail
From: Peter Freyd <pjf@saul.cis.upenn.edu>
Newsgroups: gmane.science.mathematics.categories
Subject: More products
Date: Thu, 18 May 2000 13:30:20 -0400 (EDT)
Lines: 33
Approved: news@gmane.org
Message-ID: <200005181730.NAA00788@saul.cis.upenn.edu>
NNTP-Posting-Host: main.gmane.org
X-Trace: ger.gmane.org 1241017897 31644 80.91.229.2 (29 Apr 2009 15:11:37 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:11:37 +0000 (UTC)
To: categories@mta.ca
Original-X-From: rrosebru@mta.ca Fri May 19 14:16:35 2000 -0300
Original-Received: (from Majordom@localhost)
	by mailserv.mta.ca (8.9.3/8.9.3) id OAA05127
	for categories-list; Fri, 19 May 2000 14:11:08 -0300 (ADT)
X-Authentication-Warning: mailserv.mta.ca: Majordom set sender to cat-dist@mta.ca using -f
Original-Sender: cat-dist@mta.ca
Precedence: bulk
Status: O
Content-Length: 1418
Original-Lines: 32
Xref: news.gmane.org gmane.science.mathematics.categories:1523
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/1523>

Once again let me respond to Kai Bruennler's query:

  Is there a binary product in the category of sets and functions 
  that is "strictly associative", i.e.
  A x (B x C) = (A x B) x C   and
  the associativity isomorphisms are equal to the identity?

With the axiom of choice it's possible to construct such a product for
most categories that arise in nature. The needed condition (besides
having finite products) is that each isomorphism class be large enough
to accommodate the construction in the next sentence.

Given a category with a binary products let  O  be its objects and  O*
the finite strings of objects and choose a bijection  P:O* --> O  that
sends a string to a product thereof. (The condition, therefore, 
reduces to the condition that each isomorphism class be at least as 
large as the class of finite strings whose product is in that 
isomorphism class.)

Define a new binary product on objects by taking  

  P<A_1, A_2,..., A_m>  x  P<B_1, B_2,..., B_n>  =
                             P<A_1, A_2,..., A_m, B_1, B_2,..., B_n>.

As written, this construction does not work for the category of sets.
The problem is the empty set. The construction, though, continues to
work if the bijection condition is understood only for those strings
whose products are non-empty. The same trick works for any category 
with strict initial object.

Note that  1 x A  =  A  =  A x 1  where  1  denotes  P<>.


