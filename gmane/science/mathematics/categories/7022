Path: news.gmane.org!not-for-mail
From: Steve Lack <steve.lack@mq.edu.au>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: Dualizing comma categories
Date: Mon, 31 Oct 2011 09:29:18 +1100
Lines: 58
Approved: news@gmane.org
Message-ID: <E1RKrIy-0002OE-7C@mlist.mta.ca>
References: <E1RKVbv-0005yH-G5@mlist.mta.ca>
Reply-To: Steve Lack <steve.lack@mq.edu.au>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0 (Apple Message framework v1084)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: quoted-printable
X-Trace: dough.gmane.org 1320065443 28275 80.91.229.12 (31 Oct 2011 12:50:43 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 31 Oct 2011 12:50:43 +0000 (UTC)
Cc: categories <categories@mta.ca>
To: David Leduc <david.leduc6@googlemail.com>
Original-X-From: majordomo@mlist.mta.ca Mon Oct 31 13:50:39 2011
Return-path: <majordomo@mlist.mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from smtpx.mta.ca ([138.73.1.4])
	by lo.gmane.org with esmtp (Exim 4.69)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1RKrK2-00063g-HQ
	for gsmc-categories@m.gmane.org; Mon, 31 Oct 2011 13:50:38 +0100
Original-Received: from mlist.mta.ca ([138.73.1.63]:35908)
	by smtpx.mta.ca with esmtp (Exim 4.76)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1RKrIz-0000cI-Qb; Mon, 31 Oct 2011 09:49:33 -0300
Original-Received: from majordomo by mlist.mta.ca with local (Exim 4.71)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1RKrIy-0002OE-7C
	for categories-list@mlist.mta.ca; Mon, 31 Oct 2011 09:49:32 -0300
In-Reply-To: <E1RKVbv-0005yH-G5@mlist.mta.ca>
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:7022
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/7022>

Dear David,

As usual,  constructing colimits in Cat (and other concrete categories =
or 2-categories)
is more difficult than constructing limits.=20

As you suspected, a cocomma object over the initial object is just a =
coproduct.  This is
completely general, not just true in Cat. Seen as a general =
2-categorical fact, it becomes
the same fact that you mentioned: a comma object over a terminal object =
is just a product.=20

I won't try to describe the general cocomma object, but another special =
case of a cocomma=20
object is the *collage* of an arrow f:A-->B. This is the universal =
diagram containing arrows=20
i:A->C and j:B->C and a 2-cell jf->i. It can be seen as a cocomma object =
of f and the identity
1_A. This special case is easy to describe in Cat. The object-set of C =
is the disjoint=20
union of the object-sets of A and of B. A morphism in C between objects =
of A is a=20
morphism in A; a morphism in C between objects of B is a morphism of B. =
There is
a morphism fa->a for each a in A, and these are the only morphisms from =
objects
of B to objects of A; there are no morphisms from objects of A to =
objects of B.=20
(Thus the morphisms can be described by the 2x2 matrix with entries A, =
f, 0, B; this can=20
be made precise if you think of the underlying span of a category as a =
matrix.)

Steve Lack.

On 30/10/2011, at 11:34 PM, David Leduc wrote:

> Hi,
>=20
> A comma category is a comma object in the 2-category Cat of categories
> and functors. And a comma object is defined by a universal property.
> Now, one can dualize the notion of comma object by turning around the
> 1-cells and/or 2-cells in its definition. My question is: when we
> instantiate those dualized definitions to Cat, what do we obtain? In
> other words, what is a "co-comma category"?
>=20
> For example, since the product of two categories is a special case of
> comma category, I would expect that the coproduct of two categories is
> a special case of "co-comma category".
>=20
> Thanks!
>=20



[For admin and other information see: http://www.mta.ca/~cat-dist/ ]

