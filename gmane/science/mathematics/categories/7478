Path: news.gmane.org!not-for-mail
From: Mike Stay <metaweta@gmail.com>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: Algorithms arising from category theory
Date: Wed, 17 Oct 2012 11:51:34 -0700
Lines: 47
Approved: news@gmane.org
Message-ID: <E1TOp80-0000DY-Qo@mlist.mta.ca>
References: <E1TNoV0-00006L-5t@mlist.mta.ca>
Reply-To: Mike Stay <metaweta@gmail.com>
NNTP-Posting-Host: plane.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Trace: ger.gmane.org 1350563006 22391 80.91.229.3 (18 Oct 2012 12:23:26 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Thu, 18 Oct 2012 12:23:26 +0000 (UTC)
To: categories <categories@mta.ca>
Original-X-From: majordomo@mlist.mta.ca Thu Oct 18 14:23:30 2012
Return-path: <majordomo@mlist.mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from smtpx.mta.ca ([138.73.1.134])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1TOp8K-0003O7-3f
	for gsmc-categories@m.gmane.org; Thu, 18 Oct 2012 14:23:28 +0200
Original-Received: from mlist.mta.ca ([138.73.1.63]:56561)
	by smtpx.mta.ca with esmtp (Exim 4.77)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1TOp75-0001Zv-TF; Thu, 18 Oct 2012 09:22:11 -0300
Original-Received: from majordomo by mlist.mta.ca with local (Exim 4.71)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1TOp80-0000DY-Qo
	for categories-list@mlist.mta.ca; Thu, 18 Oct 2012 09:23:08 -0300
In-Reply-To: <E1TNoV0-00006L-5t@mlist.mta.ca>
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:7478
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/7478>

Thanks, everyone for your responses!  They've been very helpful.

On Mon, Oct 15, 2012 at 9:42 AM, Mike Stay <metaweta@gmail.com> wrote:
> I'd like to get more computer programmers interested in category
> theory.  There's the obvious connection to type theory and categorical
> semantics, but programmers are usually far more interested in
> algorithms.  Recently I found the excellent paper "Generalizing
> Compiler Optimizations from Proofs" by Tate, Stepp, and Lerner.  They
> write,
>
> "Some have asked us why we abstracted our proof generalization
> technique at all, and why we used category theory as our abstraction.
> However, we actually designed the abstract algorithm first, using
> category theory, and then used that to figure out how to solve our
> concrete problem. We got stuck with the concrete problem, overwhelmed
> by the details and the variables, and any solution we could think of
> seemed arbitrary. In order to reflect and simplify, we decided to
> phrase our question categorically. This lead to a diagram of sources
> and sinks, so we just used pushouts and pullbacks to glue things
> together. The biggest challenge was coming up with pushout
> completions, rather than using some existing standard concept. The
> categorical formulation was easy to specify and reason about.
> Afterwards, we instantiated the abstract processes, such as pushouts,
> with concrete algorithms, such as unification, in order to produce our
> final implementation with strong generality guarantees.
>
> "We have actually found this process of abstracting to category theory
> whenever we get stuck to be quite fruitful. Not only does it end up
> solving our concrete problem, but we end up with a better
> understanding of our own problem as well as an abstract solution which
> can be easily adapted to other applications. Thus, our experience
> suggests that category theory may be useful in constructing actual
> algorithms, in addition to being useful as a framework for
> formalization. We would be interested to know of other similar
> experiences, either positive or negative."
>
> Can any readers point me to other algorithms that were discovered by
> turning to category theory or to reports of problems solved by
> realizing they were instances of an abstraction of another solved
> problem?
> --
> Mike Stay - metaweta@gmail.com
> http://www.cs.auckland.ac.nz/~mike
> http://reperiendi.wordpress.com

[For admin and other information see: http://www.mta.ca/~cat-dist/ ]

