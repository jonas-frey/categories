Path: news.gmane.org!not-for-mail
From: categories <cat-dist@mta.ca>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: Topos-abelian categories that are neither
Date: Fri, 31 Oct 1997 14:34:05 -0400 (AST)
Lines: 131
Approved: news@gmane.org
Message-ID: <Pine.OSF.3.90.971031143246.4797A-100000@mailserv.mta.ca>
NNTP-Posting-Host: main.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Trace: ger.gmane.org 1241017005 26040 80.91.229.2 (29 Apr 2009 14:56:45 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 14:56:45 +0000 (UTC)
To: categories <categories@mta.ca>
Original-X-From: cat-dist Fri Oct 31 14:35:45 1997
Original-Received: by mailserv.mta.ca; id AA24325; Fri, 31 Oct 1997 14:34:06 -0400
Status: O
Content-Length: 5290
Original-Lines: 130
Xref: news.gmane.org gmane.science.mathematics.categories:505
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/505>

[Note from moderator: this is two postings from Peter...an error on my 
part resulted in the first not being circulated until now.]

Date: Tue, 28 Oct 1997 08:50:20 -0500 (EST)
From: Peter Freyd <pjf@saul.cis.upenn.edu>

Vaughan points out the many remarkable similarities between topoi and
abelian categories. I've always thought that the most remarkable is
the fact that if one forms the pushout of a pair of maps one of which
is monic then the result is a pullback. The known proofs for the two
cases are remarkably different. When both maps are monic this is known
as the amalgamation property (at least it's so known in the category
of belian groups, that is, groups abelian or not).

It's also right here that a big difference shows up. For abelian cats
the lemma remains true when one relaxes the hypothesis from "a pair of
maps one of which is monic" to "a pair of maps that are jointly
monic." Such a lemma is very wrong for topoi. (For a counterexample in
sets pushout any jointly monic pair of maps from a 3-element set. The
result is a pullback iff one of the given maps is already monic. Such
a counterexample sits, in fact, in any non-degenerate topos.)

Vaughan asked:

  What can be said of the class of those categories having all the
  elementary properties common to toposes and abelian categories?  In
  particular does it contain anything other than toposes and abelian
  categories?  And if so, does this outcome change when the language
  is extended to say second order logic?

The answer to the second question is no (hence so is the answer to
the third sentence).

There is a complete answer to the first question. You won't like it.

For a 1-sentence axiom of pratt categories first take a 1-sentence
elementary axiom, T, for elementary topoi and a 1-sentence elementary
axiom, A, for abelian categories

Then take the sentence:

   T or A.

Sorry. 

Vaughan goes on to say:

  To the extent that both toposes and abelian categories share much
  pleasant structure, the models of the intersection of their
  theories, for a suitable choice of language, would seem to be a nice
  class in its own right.

This strikes me as an interesting topic (and perhaps we should use the
phrase "pratt categories" for what emerges as the right choice of this
class). My first choice for the suitable choice of language would be
the set of universal Horn sentences in the predicates of finite limits
and colimits (where it is understood that we already have the axioms
for finite bicompleteness). Can one prove the expected representation
theorem: does every pratt category have a faithful limit- and colimit-
preserving functor into a product of an abelian category and a topos?


Date: Fri, 31 Oct 1997 05:35:00 -0500 (EST)
From: Peter Freyd <pjf@saul.cis.upenn.edu>
To: cat-dist@mta.ca

Somehow my first answer to Vaughan's question went astray. He
had asked:

  What can be said of the class of those categories having all the
  elementary properties common to toposes and abelian categories?  In
  particular does it contain anything other than toposes and abelian
  categories?  And if so, does this outcome change when the language
  is extended to say second order logic?

The answer to the second question is no, hence so is the answer to
the third. And you won't like the answer to the first.

Given any two elementary theories, *A*  and  *T*, let  *AoT*  be the 
set of all sentences of the form  "A or T", where  "A"  is a sentence
in  *A*  and  "T"  is a sentence in  *T*.  Clearly every model of  *A*
is a model of  *AoT*  and so is every model of  *T*.

Almost as clearly: every model of  *AoT*  is either a model of  *A*
or of  *T*.

Since the elementary theories of abelian cats and topoi can each be
finitely axiomatized, there's a single elementary sentence common to
topoi and abelian cats whose only models are either topoi or abelian
cats.

                  *           *          *

A few misstatements from my previous post. My attempt to abbreviate
V4  didn't work. I want to say that the diagram is a pushout (of 
course it's a pullback). So it should be:

V4) If  A -> C  is monic and 
                              A
                            /   \
                           B     C
                            \   /
                              D

is a pushout then and so is
                             0xA
                            /   \
                         0xB     0xC
                            \   /
                             0xD.


I wrote:

   And note that the type-A objects can not be reflective: if 1 has a
   map to any type-A object the entire category collapses.
	
I should have written:

   And note that the type-A objects can not be reflective unless all
   objects are type-A: if  1  has a map to any type-A object then 
   0 = 1.

Finally (I must be kidding), as it stands the  P-E-l-r-/\   structure
is not properly fixed for abelian categories. Adjust as follows:  /\ 
is defined for pairs  f:R -> Y, g:R -> X  only when both  R  and  Y
are of type-T. Note that the equation in V9 is a directed equality: if
/\(f,g)  is defined then the equality holds. V10 must be modified by 
strengthening the hypothesis to include the condition that  Y  is 
type-T  (at which point the condition on  R  becomes redundant).

