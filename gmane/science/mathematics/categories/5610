Path: news.gmane.org!not-for-mail
From: Robert Seely <rags@math.mcgill.ca>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: Composing modifications
Date: Thu, 4 Mar 2010 16:25:01 -0500 (EST)
Lines: 125
Approved: news@gmane.org
Message-ID: <E1NngEj-0006ZD-Bg@mailserv.mta.ca>
References: <E1NlT0U-0004p0-QA@mailserv.mta.ca>
Reply-To: Robert Seely <rags@math.mcgill.ca>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Trace: dough.gmane.org 1267830996 14151 80.91.229.12 (5 Mar 2010 23:16:36 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 5 Mar 2010 23:16:36 +0000 (UTC)
To: David Leduc <david.leduc6@googlemail.com>
Original-X-From: categories@mta.ca Sat Mar 06 00:16:31 2010
connect(): Connection refused
Return-path: <categories@mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from mailserv.mta.ca ([138.73.1.1])
	by lo.gmane.org with esmtp (Exim 4.69)
	(envelope-from <categories@mta.ca>)
	id 1Nngkw-0004YD-Sy
	for gsmc-categories@m.gmane.org; Sat, 06 Mar 2010 00:16:31 +0100
Original-Received: from Majordom by mailserv.mta.ca with local (Exim 4.61)
	(envelope-from <categories@mta.ca>)
	id 1NngEj-0006ZD-Bg
	for categories-list@mta.ca; Fri, 05 Mar 2010 18:43:13 -0400
In-Reply-To: <E1Nn054-0006rU-5l@mailserv.mta.ca>
Original-Sender: categories@mta.ca
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:5610
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/5610>

There are very good reasons to want a "tricategory of bicategories" in
the lax sense, it's just unfortunate that such doesn't exist.  This
prompted my collegues and me to consider a slightly modified notion
(pun intended), which you can find in two papers (both TAC 2003):

  Modules (Cockett-Koslowski-Seely-Wood) (TAC 11(2003)17, pp 375-396.)

  Morphisms and modules for poly-bicategories (Cockett-Koslowski-Seely)
  (TAC 11(2003)2, pp 15-74.)

   http://www.tac.mta.ca/tac/index.html#vol11   or from my webpage
   http://www.math.mcgill.ca/rags/

The key idea is to consider modules between morphisms (lax functors)
of bicategories, and what we call modulations between modules, instead
of lax natural transformations and modifications.  This all works very
well in the multi-bicategory setting (or even in the poly-bicategory
setting), but under certain well-known completeness conditions, the
"multi-" ("poly-") structure is representable (i.e. we have ordinary
bicategorical structure).

The Cockett-Koslowski-Seely-Wood paper is probably easier going for
most readers here; the Cockett-Koslowski-Seely paper gives a more
general setting, and is perhaps more detailed (well, it is 3x as
long).  (It also has prettier pictures.)

-= rags =-



On Wed, 3 Mar 2010, David Leduc wrote:

> Dear Nick and Tom,
>
> Thank you very much for your replies. It is very helpful.
>
> I had in mind to form a tricategory of bicategories, therefore I guess
> I was talking of what Tom calls strong transformations. They are also
> called weak??? I am a bit confused by the lax, weak, pseudo, strict
> and so on terminology in higher category theory. Nick, could you
> confirm that you were talking of strong transformations in your mail?
> Now I am not sure anymore what are natural transformations in category
> theory. They are strict transformations, right?
>
> Unfortunately, I do not have a copy of the paper "Coherence for
> tricategories" by Gordon, Power and Street. I guess such reference
> would help me a lot with such questions.
>
> I have another question. For strong and strict (and maybe lax?)
> transformations, we have the interchange law relating vertical and
> horizontal composition.  What is the equivalent of interchange law for
> compositions of modifications?
>
> Thank you,
>
> David
>
>
> On 3/3/10, Tom Leinster <tl@maths.gla.ac.uk> wrote:
>> Dear David,
>>
>>> I am reading Basic Bicategories by Tom Leinster, and I have basic
>>> questions about modifications.
>>>
>>> 1) Suppose that n, n', m and m' are transformations such that  m * n
>>> and  m' * n'  are well defined, where * denotes horizontal (=
>>> Godement) composition of transformations.
>>> From given modifications  a:m-->m'  and  b:n-->n'  is there a way to
>>> derive a modification from  m * n  to  m' * n'  ?
>>
>> The first thing to be careful about is horizontal composition of
>> transformations.
>>
>> In that paper, "transformation" was used to mean what might more
>> systematically be called "lax transformation".  The paper also refers to
>> "strong" transformations (Gray's terminology?, also called pseudo or
>> weak), and strict transformations.  For horizontal composition of
>> transformations, the situation is this:
>>
>> i.   Lax: can't be done
>> ii.  Strong: can be done, after making a fairly harmless non-canonical
>>       choice of "left" or "right"
>> iii. Strict: can be done, canonically.
>>
>> So in order for your question to make sense, I think you need to assume
>> that the transformations are strong, at least.  And in that case, yes,
>> there is a canonical way to horizontally compose modifications in the way
>> that you describe.
>>
>>> 2) There are two ways to compose transformations: vertical and
>>> horizontal. What are the ways to compose modifications?
>>
>> Provided that you're using strong or strict transformations (so that
>> horizontal composition makes sense), there are three ways.  You could call
>> them vertical, horizontal and... transversal?
>>
>> But it's probably better to adopt a more systematic terminology and talk
>> about "i-composition" for i = 0, 1, 2.  Here i is the dimension of the
>> cell that your two composable things have in common.  For example, suppose
>> that we were talking about composing 2-cells x and y inside a 2-category.
>> Then:
>>
>> * vertical composition would be "1-composition", because you can do it
>>    when the 1-dimensional domain dom(x) of x is equal to the 1-dimensional
>>    codomain cod(y) of y
>>
>> * horizontal composition would be "0-composition", because you can do it
>>    when the 0-dimensional domain dom(dom(x)) of x is equal to the
>>    0-dimensional codomain cod(cod(y)) of y.
>>
>> Best wishes,
>> Tom
>>
>
>
> [For admin and other information see: http://www.mta.ca/~cat-dist/ ]
>

-- 
<rags@math.mcgill.ca>
<www.math.mcgill.ca/rags>


[For admin and other information see: http://www.mta.ca/~cat-dist/ ]

