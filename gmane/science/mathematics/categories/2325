Path: news.gmane.org!not-for-mail
From: Toby Bartels <toby+categories@math.ucr.edu>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: topos logic arising nicely
Date: Wed, 4 Jun 2003 08:20:39 -0700
Lines: 30
Approved: news@gmane.org
Message-ID: <20030604152039.GC11425@math-rs-n01.ucr.edu>
References: <200306032014.WAA05082@fb04305.mathematik.tu-darmstadt.de>
NNTP-Posting-Host: main.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: ger.gmane.org 1241018576 3560 80.91.229.2 (29 Apr 2009 15:22:56 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Wed, 29 Apr 2009 15:22:56 +0000 (UTC)
To: categories@mta.ca
Original-X-From: rrosebru@mta.ca Thu Jun  5 16:09:32 2003 -0300
Return-path: <cat-dist@mta.ca>
Envelope-to: categories-list@mta.ca
Delivery-date: Thu, 05 Jun 2003 16:09:32 -0300
Original-Received: from Majordom by mailserv.mta.ca with local (Exim 4.10)
	id 19O001-0006re-00
	for categories-list@mta.ca; Thu, 05 Jun 2003 16:02:09 -0300
Content-Disposition: inline
In-Reply-To: <200306032014.WAA05082@fb04305.mathematik.tu-darmstadt.de>
User-Agent: Mutt/1.4i
Original-Sender: cat-dist@mta.ca
Precedence: bulk
X-Keywords: 
X-UID: 16
Status: O
Content-Length: 926
Original-Lines: 29
Xref: news.gmane.org gmane.science.mathematics.categories:2325
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/2325>

Thomas Streicher wrote:

>In Higher Order Logic one may
>well assume inhabitedness of all types when these are built up from
>N (and 1) via x,-> and P(-). In higher order logic one cannot form
>subtypes in the logical sense and that's the only way how one can
>build types that aren't inhabited.

That may be the only way that one can *construct* such a type,
hence the only way that one can *prove* that such a type exists,
but how do you know that some unspecified type variable \sigma
doesn't refer to an uninhabited type to begin with?
The answer will depend on the interpretation, I suppose;
some logics simply aren't applicable to some semantics.

>Of course, even if type sigma is inhabited from
>    (1)   \forall x:\sigma. A(x)->B
>one must not conclude
>    (2)   \exists x:\sigma. A(x) /\ B
>BUT only
>    (3)  \exists x:\sigma. A(x) -> B

Of course.  Only with \exists x:\sigma. A(x) will (2) follow.


-- Toby




