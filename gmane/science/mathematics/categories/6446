Path: news.gmane.org!not-for-mail
From: Michael Shulman <mshulman@ucsd.edu>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: source, sinks, and ?
Date: Tue, 4 Jan 2011 10:31:19 -0800
Lines: 79
Approved: news@gmane.org
Message-ID: <E1PaINY-0006TD-L0@mlist.mta.ca>
References: <E1Pa7b4-0006BJ-Rk@mlist.mta.ca>
Reply-To: Michael Shulman <mshulman@ucsd.edu>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Trace: dough.gmane.org 1294191722 26702 80.91.229.12 (5 Jan 2011 01:42:02 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Wed, 5 Jan 2011 01:42:02 +0000 (UTC)
To: categories@mta.ca
Original-X-From: majordomo@mlist.mta.ca Wed Jan 05 02:41:58 2011
Return-path: <majordomo@mlist.mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from smtpx.mta.ca ([138.73.1.114])
	by lo.gmane.org with esmtp (Exim 4.69)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1PaINx-0000x2-Db
	for gsmc-categories@m.gmane.org; Wed, 05 Jan 2011 02:41:57 +0100
Original-Received: from mlist.mta.ca ([138.73.1.63]:34517)
	by smtpx.mta.ca with esmtp (Exim 4.71)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1PaINe-0002Vr-Aa; Tue, 04 Jan 2011 21:41:38 -0400
Original-Received: from majordomo by mlist.mta.ca with local (Exim 4.71)
	(envelope-from <majordomo@mlist.mta.ca>)
	id 1PaINY-0006TD-L0
	for categories-list@mlist.mta.ca; Tue, 04 Jan 2011 21:41:33 -0400
In-Reply-To: <E1Pa7b4-0006BJ-Rk@mlist.mta.ca>
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:6446
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/6446>

Thanks to everyone who replied.  I did intend that the source and
target be specified, i.e. to consider, for two given families of
objects { x_i }_{i \in I} and { y_j }_{j \in J} (for which either I or
J might be empty), a family of morphisms { x_i --> y_j }_{i \in I, j
\in J}.  This reduces to the notion of sink (resp. cone) described by
Reinhard when J (resp. I) is a singleton.

"Matrix" and "array" are both good words, although I agree that the
non-composability in general makes "matrix" slightly misleading.

One might also observe that such a family can be identified with a
diagram indexed on the collage (or cograph) of a
profunctor/distributor between discrete categories (specifically, the
profunctor constant at 1).  But that doesn't immediately suggest a
conciser name to my mind.

One place such families occur is in what one might call "joint
source/sink factorization systems".  For instance, in Ross Street's
paper "The family approach to total cocompleteness and toposes," a
"familially regular category" is defined to be one in which any such
"array" with J finite factors into a strong-epic sink followed by a
monic source, and strong-epic sinks are stable under pullback.

Another is that just as the limit of a diagram is a cone over that
diagram with a universal property, a *multilimit* of a diagram can be
described as an "array" over that diagram (which we may regard as a
family of cones with the same codomain) with a universal property.

Mike

On Tue, Jan 4, 2011 at 2:44 AM, Reinhard Boerger
<Reinhard.Boerger@fernuni-hagen.de> wrote:
> Hello,
>
> I am used to a slightly different terminology, which seems appropriate.
>
>> A family of morphisms { x_i --> y }_{i \in I} in some category, all
>> with the same codomain, is called a "sink" or a "cocone".
>
> For a sink, as I know it, the codomain should also be specified, i.e. a s=
ink
> is given by an object y and a family of morphisms x_i --> y. If I is not
> empty, this does not matter, but for empty I at least y should be given. =
A
> cocone is given by an object y and a natural transformation from some
> functor to the constant functor with value y; her y is also specified. So=
  a
> sink is essentially a discrete cocone.
>
> =A0 A family {
>> x --> y_j }_{j \in J} all with the same domain is called a "source" or
>> a "cone".
>
> These are the dual notions.
>
>> Is there a name for a family of the form { x_i --> y_j }_{i
>> \in I, j \in J} ? =A0A cylinder? =A0Or a frustrum (since I \neq J)?
>
> I do not know. Where does it occur? Probably the domain and codomain shou=
ld
> also be specified, possibly even an arrow. If a non-empty collection of
> arrows behave similarly (e.g. is mapped to the same arrow by a given func=
tor
> F), this means the same a saying that they all behave in the same way as =
a
> given arrow 8e.g are mapped to some special morphism by F). A collection =
of
> two objects x,y (prescribed domain and codomain) is something different; =
it
> does not give an arrow Fx -->Fy.
>
>
> Greetings
> Reinhard
>


[For admin and other information see: http://www.mta.ca/~cat-dist/ ]

