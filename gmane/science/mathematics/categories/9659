Path: news.gmane.org!.POSTED!not-for-mail
From: "1337777.OOO" <1337777.ooo@gmail.com>
Newsgroups: gmane.science.mathematics.logic.coq.club,gmane.org.region.san-francisco.noisebridge.general,gmane.science.mathematics.algtop,gmane.science.mathematics.categories
Subject: Re: 5MoF 2018 (January/February)
Date: Thu, 21 Jun 2018 19:37:07 -0700
Lines: 245
Approved: news@gmane.org
Message-ID: <CANqbe0WPm039KUmS_FJmhaAigswYMp4W+tMuwsgFA6Sh_80wJQ@mail.gmail.com>
References: <674585060.1280930.1515198293306.ref@mail.yahoo.com>
 <674585060.1280930.1515198293306@mail.yahoo.com> <03bf6a63-df6f-b9b9-f960-b2ed487f5957@gmail.com>
Reply-To: coq-club@inria.fr
NNTP-Posting-Host: blaine.gmane.org
Mime-Version: 1.0
Content-Type: multipart/alternative; boundary="0000000000007c83c5056f31e8af"
X-Trace: blaine.gmane.org 1529634913 14104 195.159.176.226 (22 Jun 2018 02:35:13 GMT)
X-Complaints-To: usenet@blaine.gmane.org
NNTP-Posting-Date: Fri, 22 Jun 2018 02:35:13 +0000 (UTC)
To: "thex@yahoo.com" <thex@yahoo.com>, 
	"noisebridge-discuss@lists.noisebridge.net" <noisebridge-discuss@lists.noisebridge.net>, 
	"algtop-l@lists.lehigh.edu" <algtop-l@lists.lehigh.edu>, 
	"isabelle-users@cl.cam.ac.uk" <isabelle-users@cl.cam.ac.uk>, "coq-club@inria.fr" <coq-club@inria.fr>, 
	"categories@mta.ca" <categories@mta.ca>
Original-X-From: coq-club-owner@inria.fr Fri Jun 22 04:35:08 2018
Return-path: <coq-club-owner@inria.fr>
Envelope-to: gsmlcc-coq-club@gmane.org
Original-Received: from mail2-relais-roc.national.inria.fr ([192.134.164.83])
	by blaine.gmane.org with esmtp (Exim 4.84_2)
	(envelope-from <coq-club-owner@inria.fr>)
	id 1fWBul-0003YQ-7q
	for gsmlcc-coq-club@gmane.org; Fri, 22 Jun 2018 04:35:07 +0200
X-IronPort-AV: E=Sophos;i="5.51,255,1526335200"; 
   d="scan'208";a="332812320"
Original-Received: from sympa.inria.fr ([193.51.193.213])
  by mail2-relais-roc.national.inria.fr with ESMTP; 22 Jun 2018 04:37:17 +0200
Original-Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 884FC824A0; Fri, 22 Jun 2018 04:37:17 +0200 (CEST)
X-Original-To: coq-club@sympa.inria.fr
Delivered-To: coq-club@sympa.inria.fr
Original-Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 5230F82474
	for <coq-club@sympa.inria.fr>; Fri, 22 Jun 2018 04:37:11 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=1337777.ooo@gmail.com; spf=Pass smtp.mailfrom=1337777.ooo@gmail.com; spf=None smtp.helo=postmaster@mail-oi0-f67.google.com
IronPort-PHdr: =?us-ascii?q?9a23=3ASCIyRhECeuHdTbh/WjRAAJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76psy+bnLW6fgltlLVR4KTs6sC17KL9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa9bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjE7/mHZisJ+gqFGrhy/uxNy2JTbbJ2POfdkYq/RYdEXSGxcVchRTSxBBYa8?=
 =?us-ascii?q?YpMBA+YcM+tVoYvwqlkMoBa8HwWiHfrhxCZGinTr2qA2zuosHA/E0QEiHd8Dsm?=
 =?us-ascii?q?7YrNLyNKcVSu21w6zIwi/Cb/NSwzvy9I/IchU4rPyKQLl+f83RyUw1GAPEiFWd?=
 =?us-ascii?q?sZTlMCmV1+QVqWeb6/BsVeexhGI/sQ5xpyKgx8YrionPnI4a1lfE9SBhzIY6JN?=
 =?us-ascii?q?24VE57YcO/H5dKqy6aMI52TtstQ2FppCY11KMJtYSncygNzZQqwQPUZf+fc4WQ?=
 =?us-ascii?q?/B7vSOKcLS17iX9lYr 
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AzGwAYYCxbhkPaVdFcAQIIAgEOAQEBB?=
 =?us-ascii?q?AEBCgEBghKBCVI+fyEHg3mBHYJQcI9mkgKGJgNTCxgBCoRJAkeCNBkHAQQzFQE?=
 =?us-ascii?q?CAQEBAQEBAQEBEwEBAQgLCwgpIwyCNSKCUgIBAQIBASEEGQEbCwsIAwwGAwILB?=
 =?us-ascii?q?QMvAgIhAQERAQUBHAUBARIbgwoBgWYBAxUIB49ckAM8iwiBaRYFAReCcgWBAwE?=
 =?us-ascii?q?BgkYKGSYNDSAoV30CBhKIQoFUP4EPgw+CVkICAYIMglSCVQKNKotQLAcBAQKFe?=
 =?us-ascii?q?4YKgwmCAItBih1NU4YUDyGBNoF0cIEBgjYJCoFeJBqDToQJgQeFCAQBVR8wAZA?=
 =?us-ascii?q?rAQE?=
X-IPAS-Result: =?us-ascii?q?A0AzGwAYYCxbhkPaVdFcAQIIAgEOAQEBBAEBCgEBghKBCVI?=
 =?us-ascii?q?+fyEHg3mBHYJQcI9mkgKGJgNTCxgBCoRJAkeCNBkHAQQzFQECAQEBAQEBAQEBE?=
 =?us-ascii?q?wEBAQgLCwgpIwyCNSKCUgIBAQIBASEEGQEbCwsIAwwGAwILBQMvAgIhAQERAQU?=
 =?us-ascii?q?BHAUBARIbgwoBgWYBAxUIB49ckAM8iwiBaRYFAReCcgWBAwEBgkYKGSYNDSAoV?=
 =?us-ascii?q?30CBhKIQoFUP4EPgw+CVkICAYIMglSCVQKNKotQLAcBAQKFe4YKgwmCAItBih1?=
 =?us-ascii?q?NU4YUDyGBNoF0cIEBgjYJCoFeJBqDToQJgQeFCAQBVR8wAZArAQE?=
X-IronPort-AV: E=Sophos;i="5.51,255,1526335200"; 
   d="scan'208";a="269582663"
Original-Received: from mail-oi0-f67.google.com ([209.85.218.67])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 22 Jun 2018 04:37:09 +0200
Original-Received: by mail-oi0-f67.google.com with SMTP id t22-v6so4825556oih.6
        for <coq-club@inria.fr>; Thu, 21 Jun 2018 19:37:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=VV970S1AHsuZZc+zarbRLCYaKXEVTQEmN5ZCoNSj5zE=;
        b=h/zrfcj94jV3yY/do7t2Dr/cJO464u+FJSCE5gumOpXqnwJhCNuGXZnQeA0PBW8iCi
         MujAbCJmum2sqVEv/55DgadksawT8NKKr2YABPoSf8MK6anQov8fddm0zj3pM1mI5Z/2
         a6OwvQ/jk2gjmQK8CHpjvfYW6BSyUZtdBF8Ugb0AcvAWNKI0k+dyKn0yfct0xPjUOQq6
         a2fQhIRHcJdY2DLqGUaVF6GqZQrG2hafV5RzuaF3t9FUuNoFi9aLuWBvoEbUBUebPI8B
         pgGbBTkqw8dWjmVX+7/QM/eGcNENhYGlnALwtjtH5RAsNIqhR4uirqS5WRavYKsxGTMK
         attA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh=VV970S1AHsuZZc+zarbRLCYaKXEVTQEmN5ZCoNSj5zE=;
        b=cPIUHdCfTwpVYYQ5rccfKEM2ZUuDOV/aKbguN16V5pcIXzhe7RTZzMrmyVRi1+aUxS
         qPgKPSHnbtKMioH8KIwTyS7kLOHo6LqsUi0iWRIT1paa12bjWNaTAQPuc5itdxgR9mGj
         CRuxx5TxQLHFHYkUiNmXsoq/i/0GmuA7Mueei+3SdCf+JCzD4ivmHX9SWj/tshpYIPPX
         VM0B4cdK84iTFeQML9hL+scBJYlyFfN9nEDg77aBVHUi4rFgO8E0veJrOkoW4uRQG/NE
         WvKhKlPZfs1jSz+uZ+2/TUBiHjG7pLG9WZEeyc2C8ktcfPjg/0M9rPmwYtdevyTPfJdD
         ezpg==
X-Gm-Message-State: APt69E1M6+jAZH46tzq0+bwh7786GKadzhwymmnuUo9ttDRIb1Zc3qG8
	Ud2peRKMoHVmMi4vGdN+ETz2m2IjVDJdBy1NGAI=
X-Google-Smtp-Source: ADUXVKLcIrbpX7oyhOgVywaX8WDufJ7SgVs1HLIBDiDM5WCwEysAKU88S0Ift/HsTEEmKHZvUguUqIdV1wH68IXTk9Y=
X-Received: by 2002:aca:e082:: with SMTP id x124-v6mr14358872oig.220.1529635028105;
 Thu, 21 Jun 2018 19:37:08 -0700 (PDT)
Original-Received: by 2002:a4a:2241:0:0:0:0:0 with HTTP; Thu, 21 Jun 2018 19:37:07
 -0700 (PDT)
In-Reply-To: <03bf6a63-df6f-b9b9-f960-b2ed487f5957@gmail.com>
X-Loop: coq-club@inria.fr
X-Sequence: 16477
Errors-to: coq-club-owner@inria.fr
Precedence: list
Precedence: bulk
Original-Sender: coq-club-request@inria.fr
X-no-archive: yes
List-Id: <coq-club.inria.fr>
List-Archive: <http://sympa.inria.fr/sympa/arc/coq-club>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Owner: <mailto:coq-club-request@inria.fr>
List-Post: <mailto:coq-club@inria.fr>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20coq-club>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20coq-club>
X-Gmane-Expiry: 2018-07-06
Xref: news.gmane.org gmane.science.mathematics.logic.coq.club:20981 gmane.org.region.san-francisco.noisebridge.general:7887 gmane.science.mathematics.algtop:2147 gmane.science.mathematics.categories:9659
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.logic.coq.club/20981>

--0000000000007c83c5056f31e8af
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Proph

https://gitee.com/OOO1337777/cartier/blob/master/cartierSolution7.v
https://github.com/1337777/cartier/blob/master/cartierSolution7.v.pdf

solves half of some question of Cartier which is how to program grammatical
polymorph generated-functor-along-reindexing ( "Kan extension" ) ...

SHORT ::

  The ends is to do start with some given generating-functor from some
given reindexer-graph into some given generator-graph and then to generate
some other extended functor from some given extended indexer-graph into
some extension of the given generator-graph ; but where are those outputs
of the generated-functor at the indexes ? Oneself could get them as
metafunctors over this generator-graph , as long as oneself
grammatically-distinguishes whatever-is-interesting .

  Memo that the sense of this generated-functor ( =C2=AB colimits =C2=BB ) =
really-is
the colimit(-simultaneously) of multiple diagrams , instead of the multiple
colimits of each diagram ( "pointwise" ) (I.3.7.2) ... Moreover memo that
here the generator-graph is some non-quantified outer/global parameter ,
instead of some innerly-quantified local argument which is carried around
by all the grammatical constructors , in some =C2=AB polygeneration =C2=BB
(functorial) form , as for some presentation of grammatical
right-adjunction  (I.3.7.6) ...  Elsewhere memo that the generated-functor
is similar as some existential-quantification functor ( left adjoint to
some preimage functor of the generating-functor ) , therefore oneself may
now think of adding logical-connectives to form some external-logic of
modos and to attempt polymorph (relative-)quantifier-elimination ...

  Now the conversion-relation shall convert across two morphisms whose
sense-decoding datatype-indexes/arguments are not
syntactically/grammatically-the-same . But oneself does show that , by
logical-deduction , these two sense-decodings are indeed propositionally
equal ( "soundness lemma" ) .

  Finally , some linear total/asymptotic grade is defined on the morphisms
and the tactics-automated degradation lemma shows that each of the
conversion indeed degrades the redex morphism . But to facilitate the COQ
automatic-arithmetic during the degradation lemma , here oneself assumes
some finiteness-property on the graph of reindexer elements of each index
along the reindexing-functor and also assumes some other
finiteness-property on the indexer-graph . Clearly this ongoing COQ program
and deduction will still-proceed when those things are confined less than
any regular cardinal .

  For instant first impression , the sense-decoding ( "Yoneda" ) of the
generated-functor-along-reindexing , is written as :

#+BEGIN_EXAMPLE
Definition Yoneda00_Generated (I : obIndexer) (G : obGenerator) :=3D
  { R : { R : obReIndexer & 'Indexer( ReIndexing0 R |- I ) }
        & 'Generator( G ~> Generating0 (projT1 R) ) }.
Axiom Yoneda00_Generated_quotient :
  forall (I : obIndexer) (G : obGenerator),
  forall (R S : obReIndexer) (rs : 'ReIndexer( R |- S ))
    (si : 'Indexer( ReIndexing0 S |- I ))
    (gr : 'Generator( G ~> Generating0 R )),
    ( existT _ (existT _ S si) (gr o>Generator Generating1 rs) )
    =3D ( existT _ (existT _ R (ReIndexing1 rs o>Indexer si)) gr
        : Yoneda00_Generated I G ).
#+END_EXAMPLE

KEYWORDS :: 1337777.OOO ; COQ ; cut-elimination ; polymorph
generated-functor-along-reindexing ; polymorph metafunctors-grammar ; modos

OUTLINE ::

  * Indexer metalogic , generating-views data

  * Grammatical presentation of objects
    + Sense-decodings of the objects
    + Grammar of the objects , which carry the sense-decodings

  * Grammatical presentation of morphisms
    + Sense-decodings of the morphisms
    + Grammar of the morphisms , which carry the sense-decodings

  * Solution morphisms
    + Solution morphisms without polymorphism
    + Destruction of morphisms with inner-instantiation of object-indexes

  * Grammatical conversions of morphisms , which infer the same
sense-decoding
    + Grammatical conversions of morphisms
    + Same sense-decoding for convertible morphisms
    + Linear total/asymptotic grade and the degradation lemma

  * Polymorphism/cut-elimination by computational/total/
asymptotic/reduction/(multi-step) resolution

-----

HINT :: free master-engineering ; program this grammatical polymorph
viewed-metafunctor-along-views-data ( "sheafification" ) :
#+BEGIN_EXAMPLE
| PolyElement :
  Transformations( ( S : SubViewOfGeneratingView G ) ~> F )
  -> Transformations( G ~> ViewedMetaFunctor F )
#+END_EXAMPLE

-----

BUY MOM RECURSIVE T-SQUARE :: paypal.me/1337777 1337777.OOO@gmail.com ;
=E5=BE=AE=E4=BF=A1=E6=94=AF=E4=BB=98 2796386464@qq.com ; eth 0x54810dcb93b3=
7DBE874694407f78959Fa222D920 ;
amazon amazon.com/hz/wishlist/ls/28SN02HR4EB8W ; irc #OOO1337777

--0000000000007c83c5056f31e8af
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Proph<br>
<br>
<a href=3D"https://gitee.com/OOO1337777/cartier/blob/master/cartierSolution=
7.v" target=3D"_blank">https://gitee.com/OOO1337777/<wbr>cartier/blob/maste=
r/<wbr>cartierSolution7.v</a><br>
<a href=3D"https://github.com/1337777/cartier/blob/master/cartierSolution7.=
v.pdf" target=3D"_blank">https://github.com/1337777/<wbr>cartier/blob/maste=
r/<wbr>cartierSolution7.v.pdf</a><br>
<br>
solves half of some question of Cartier which is how to program grammatical=
 polymorph generated-functor-along-<wbr>reindexing ( &quot;Kan extension&qu=
ot; ) ...<br>
<br>
SHORT ::<br>
<br>
=C2=A0 The ends is to do start with some given generating-functor from some=
 given reindexer-graph into some given generator-graph and then to generate=
 some other extended functor from some given extended indexer-graph into so=
me extension of the given generator-graph ; but where are those outputs of =
the generated-functor at the indexes ? Oneself could get them as metafuncto=
rs over this generator-graph , as long as oneself grammatically-distinguish=
es whatever-is-interesting .<br>
<br>
=C2=A0 Memo that the sense of this generated-functor ( =C2=AB colimits =C2=
=BB ) really-is the colimit(-simultaneously) of multiple diagrams , instead=
 of the multiple colimits of each diagram ( &quot;pointwise&quot; ) (I.3.7.=
2) ... Moreover memo that here the generator-graph is some non-quantified o=
uter/global parameter , instead of some innerly-quantified local argument w=
hich is carried around by all the grammatical constructors , in some =C2=AB=
 polygeneration =C2=BB (functorial) form , as for some presentation of gram=
matical right-adjunction=C2=A0 (I.3.7.6) ...=C2=A0 Elsewhere memo that the =
generated-functor is similar as some existential-quantification functor ( l=
eft adjoint to some preimage functor of the generating-functor ) , therefor=
e oneself may now think of adding logical-connectives to form some external=
-logic of modos and to attempt polymorph (relative-)quantifier-<wbr>elimina=
tion ...<br>
<br>
=C2=A0 Now the conversion-relation shall convert across two morphisms whose=
 sense-decoding datatype-indexes/arguments are not syntactically/grammatica=
lly-<wbr>the-same . But oneself does show that , by logical-deduction , the=
se two sense-decodings are indeed propositionally equal ( &quot;soundness l=
emma&quot; ) .<br>
<br>
=C2=A0 Finally , some linear total/asymptotic grade is defined on the morph=
isms and the tactics-automated degradation lemma shows that each of the con=
version indeed degrades the redex morphism . But to facilitate the COQ auto=
matic-arithmetic during the degradation lemma , here oneself assumes some f=
initeness-property on the graph of reindexer elements of each index along t=
he reindexing-functor and also assumes some other finiteness-property on th=
e indexer-graph . Clearly this ongoing COQ program and deduction will still=
-proceed when those things are confined less than any regular cardinal .<br=
>
<br>
=C2=A0 For instant first impression , the sense-decoding ( &quot;Yoneda&quo=
t; ) of the generated-functor-along-<wbr>reindexing , is written as :<br>
<br>
#+BEGIN_EXAMPLE<br>
Definition Yoneda00_Generated (I : obIndexer) (G : obGenerator) :=3D<br>
=C2=A0 { R : { R : obReIndexer &amp; &#39;Indexer( ReIndexing0 R |- I ) }<b=
r>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 &amp; &#39;Generator( G ~&gt; Generating0 (proj=
T1 R) ) }.<br>
Axiom Yoneda00_Generated_quotient :<br>
=C2=A0 forall (I : obIndexer) (G : obGenerator),<br>
=C2=A0 forall (R S : obReIndexer) (rs : &#39;ReIndexer( R |- S ))<br>
=C2=A0 =C2=A0 (si : &#39;Indexer( ReIndexing0 S |- I ))<br>
=C2=A0 =C2=A0 (gr : &#39;Generator( G ~&gt; Generating0 R )),<br>
=C2=A0 =C2=A0 ( existT _ (existT _ S si) (gr o&gt;Generator Generating1 rs)=
 )<br>
=C2=A0 =C2=A0 =3D ( existT _ (existT _ R (ReIndexing1 rs o&gt;Indexer si)) =
gr<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 : Yoneda00_Generated I G ).<br>
#+END_EXAMPLE<br>
<br>
KEYWORDS :: 1337777.OOO ; COQ ; cut-elimination ; polymorph generated-funct=
or-along-<wbr>reindexing ; polymorph metafunctors-grammar ; modos<br>
<br>
OUTLINE ::<br>
<br>
=C2=A0 * Indexer metalogic , generating-views data<br>
<br>
=C2=A0 * Grammatical presentation of objects<br>
=C2=A0 =C2=A0 + Sense-decodings of the objects<br>
=C2=A0 =C2=A0 + Grammar of the objects , which carry the sense-decodings<br=
>
<br>
=C2=A0 * Grammatical presentation of morphisms<br>
=C2=A0 =C2=A0 + Sense-decodings of the morphisms<br>
=C2=A0 =C2=A0 + Grammar of the morphisms , which carry the sense-decodings<=
br>
<br>
=C2=A0 * Solution morphisms<br>
=C2=A0 =C2=A0 + Solution morphisms without polymorphism<br>
=C2=A0 =C2=A0 + Destruction of morphisms with inner-instantiation of object=
-indexes<br>
<br>
=C2=A0 * Grammatical conversions of morphisms , which infer the same sense-=
decoding<br>
=C2=A0 =C2=A0 + Grammatical conversions of morphisms<br>
=C2=A0 =C2=A0 + Same sense-decoding for convertible morphisms<br>
=C2=A0 =C2=A0 + Linear total/asymptotic grade and the degradation lemma<br>
<br>
=C2=A0 * Polymorphism/cut-elimination by computational/total/<wbr>asymptoti=
c/reduction/(multi-<wbr>step) resolution<br>
<br>
-----<br>
<br>
HINT :: free master-engineering ; program this grammatical polymorph viewed=
-metafunctor-along-<wbr>views-data ( &quot;sheafification&quot; ) :<br>
#+BEGIN_EXAMPLE<br>
| PolyElement :<br>
=C2=A0 Transformations( ( S : SubViewOfGeneratingView G ) ~&gt; F )<br>
=C2=A0 -&gt; Transformations( G ~&gt; ViewedMetaFunctor F )<br>
#+END_EXAMPLE<br>
<br>
-----<br>
<br>
BUY MOM RECURSIVE T-SQUARE :: <a href=3D"http://paypal.me/1337777" target=
=3D"_blank">paypal.me/1337777</a> <a href=3D"mailto:1337777.OOO@gmail.com">=
1337777.OOO@gmail.com</a> ; =E5=BE=AE=E4=BF=A1=E6=94=AF=E4=BB=98 <a href=3D=
"mailto:2796386464@qq.com">2796386464@qq.com</a> ; eth 0x54810dcb93b37DBE87=
4694407f78<wbr>959Fa222D920 ; amazon <a href=3D"http://amazon.com/hz/wishli=
st/ls/28SN02HR4EB8W" target=3D"_blank">amazon.com/hz/wishlist/ls/<wbr>28SN0=
2HR4EB8W</a> ; irc #OOO1337777<br>

--0000000000007c83c5056f31e8af--

