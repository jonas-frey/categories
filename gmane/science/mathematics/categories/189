Path: news.gmane.org!not-for-mail
From: Miles Gould <miles@assyrian.org.uk>
Newsgroups: gmane.science.mathematics.categories
Subject: Re: laziness in functional programming
Date: Fri, 20 Mar 2009 12:11:34 +0000
Lines: 33
Approved: news@gmane.org
Message-ID: <E1Ll1Qr-0006eC-KK@mailserv.mta.ca>
Reply-To: Miles Gould <miles@assyrian.org.uk>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Trace: ger.gmane.org 1237645183 4942 80.91.229.12 (21 Mar 2009 14:19:43 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Sat, 21 Mar 2009 14:19:43 +0000 (UTC)
To: categories@mta.ca
Original-X-From: categories@mta.ca Sat Mar 21 15:21:00 2009
Return-path: <categories@mta.ca>
Envelope-to: gsmc-categories@m.gmane.org
Original-Received: from mailserv.mta.ca ([138.73.1.1])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1Ll24J-0001eZ-QG
	for gsmc-categories@m.gmane.org; Sat, 21 Mar 2009 15:20:59 +0100
Original-Received: from Majordom by mailserv.mta.ca with local (Exim 4.61)
	(envelope-from <categories@mta.ca>)
	id 1Ll1Qr-0006eC-KK
	for categories-list@mta.ca; Sat, 21 Mar 2009 10:40:13 -0300
Content-Disposition: inline
Original-Sender: categories@mta.ca
Precedence: bulk
Xref: news.gmane.org gmane.science.mathematics.categories:189
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.categories/189>

On Thu, Mar 19, 2009 at 07:24:55AM -0700, John Baez wrote:
> I think most functional programming languages either delay evaluation in
> this way, or give the user the option to do this.

It's generally fairly easy to roll your own lazily-evaluated
data-structures in any modern language. All you do, instead of
returning the value in question, is return a function of no arguments
(often called a "thunk", or a "promise") which calculates said value
when called. When the value is needed, the thunk is called (and then
usually replaced with the value, to save future computation). In
languages without first-class functions (functions which can be stored
in variables, constructed on-the-fly, etc) you have to do slightly more
work to construct the thunk, but this is tedious rather than hard. See
http://blog.plover.com/prog/defunctionalization.html for a discussion of
how Java programmers work around the lack of first-class functions.

At the other end of the scale, some strictly-evaluated languages (Scheme
and O'Caml, for example), provide convenient interfaces for constructing
lazily-evaluated data-structures, which are implemented using thunks.

It's perhaps worth mentioning that lazy evaluation, though often a Very
Good Thing, is not all roses: it makes the run-time performance (speed
and memory consumption) of a program more complex to predict.

Miles

-- 
An extensible program is a double-edged sword, but recent experience has
shown that users prefer a double-edged sword to a blunt one.
  -- Paul Graham



