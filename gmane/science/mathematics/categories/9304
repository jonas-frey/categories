Path: news.gmane.org!.POSTED!not-for-mail
From: Saulo Araujo <saulo2@gmail.com>
Newsgroups: gmane.science.mathematics.logic.coq.club,gmane.science.mathematics.discrete,gmane.science.mathematics.categories
Subject: Re: [CFP] Formal verification for blockchain protocols &
 smart-contracts
Date: Fri, 25 Aug 2017 13:19:56 -0300
Lines: 408
Approved: news@gmane.org
Message-ID: <CA+ckhoS0odaWOhtC-p11c7t_yb3CiQeFeLi7SjQTRe4diLjVyw@mail.gmail.com>
References: <CANqbe0VeGgLVN61sJqvxU1cCEKBoYPKMCqQmg9Sywq-yLYDXfw@mail.gmail.com>
Reply-To: coq-club@inria.fr
NNTP-Posting-Host: blaine.gmane.org
Mime-Version: 1.0
Content-Type: multipart/alternative; boundary="001a113d069ae64014055796501d"
X-Trace: blaine.gmane.org 1503678029 9257 195.159.176.226 (25 Aug 2017 16:20:29 GMT)
X-Complaints-To: usenet@blaine.gmane.org
NNTP-Posting-Date: Fri, 25 Aug 2017 16:20:29 +0000 (UTC)
Cc: cartier@ihes.fr, DMANET@zpr.uni-koeln.de, categories@mta.ca, 
	Arthur Breitman <arthurb@tezos.com>
To: coq-club@inria.fr
Original-X-From: coq-club-owner@inria.fr Fri Aug 25 18:20:17 2017
Return-path: <coq-club-owner@inria.fr>
Envelope-to: gsmlcc-coq-club@gmane.org
Original-Received: from mxfilter-048035.atla03.us.yomura.com ([107.189.48.35])
	by blaine.gmane.org with esmtp (Exim 4.84_2)
	(envelope-from <coq-club-owner@inria.fr>)
	id 1dlHLB-0001hk-H6
	for gsmlcc-coq-club@gmane.org; Fri, 25 Aug 2017 18:20:13 +0200
X-Yomura-MXScrub: 1.0
Original-Received: from mail2-relais-roc.national.inria.fr (unknown [192.134.164.83])
	by mxfilter-048035.atla03.us.yomura.com (Halon) with ESMTPS
	id 47759911-89b1-11e7-9af4-b499baabecb2;
	Fri, 25 Aug 2017 16:20:16 +0000 (UTC)
X-IronPort-AV: E=Sophos;i="5.41,426,1498514400"; 
   d="scan'208,217";a="288348972"
Original-Received: from sympa.inria.fr ([193.51.193.213])
  by mail2-relais-roc.national.inria.fr with ESMTP; 25 Aug 2017 18:20:12 +0200
Original-Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 04EAB801DD; Fri, 25 Aug 2017 18:20:13 +0200 (CEST)
X-Original-To: coq-club@sympa.inria.fr
Delivered-To: coq-club@sympa.inria.fr
Original-Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B81AA801DC
	for <coq-club@sympa.inria.fr>; Fri, 25 Aug 2017 18:20:00 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=saulo2@gmail.com; spf=Pass smtp.mailfrom=saulo2@gmail.com; spf=None smtp.helo=postmaster@mail-ua0-f179.google.com
IronPort-PHdr: =?us-ascii?q?9a23=3AiKPYJROD7/LMgygjtlgl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/v/rarrMEGX3/hxlliBBdydsK0UzbeO+4nbGkU+or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6aijSI4DUTAhTyMxZu?=
 =?us-ascii?q?bqSwQ9aKzpf/6+fn8JrKJg5MmTCVYLVoLRzwox+CmNMRhN5ZI7s1zVPguHJVee?=
 =?us-ascii?q?MekXhhOFaUxT7z486x+Nho9CEG6KFpzNJJTaivJ/dwdrdfFjlzdjltvMA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B0AwAITaBZhrPZVdFcHAEBBAEBCgEBF?=
 =?us-ascii?q?QEBAQECAQEBAQgBAQEBgwJSP4EVB4UmmH6EYZNDgSUDXC6DOoEhPgJKgxIHQxQ?=
 =?us-ascii?q?BAQEBAQEBAQEBARIBAQEICwsIKC+CMwUBHgEFgjwDAw4VBBkBGwkNBwEDDAYFC?=
 =?us-ascii?q?wUDLwICIQEBEQEFARwQAgcIEgGJfQEDFRChVECKVxGBI4FtGAUBHIMJBYNgChk?=
 =?us-ascii?q?nDQ1Kg0QBAQEBAQUBAQEBAQEBAQEXAgYSgxiCAoYkNYF+WYFhFxJBgmaCYQWBL?=
 =?us-ascii?q?QGedzoCgVCGBod6hHaCElqPeoYSg2CCU4gpFR+BFQINJ28/MiEkXhpcgVqCDyo?=
 =?us-ascii?q?NAREMGYFoJjYFh3NtgVMBAQE?=
X-IPAS-Result: =?us-ascii?q?A0B0AwAITaBZhrPZVdFcHAEBBAEBCgEBFQEBAQECAQEBAQg?=
 =?us-ascii?q?BAQEBgwJSP4EVB4UmmH6EYZNDgSUDXC6DOoEhPgJKgxIHQxQBAQEBAQEBAQEBA?=
 =?us-ascii?q?RIBAQEICwsIKC+CMwUBHgEFgjwDAw4VBBkBGwkNBwEDDAYFCwUDLwICIQEBEQE?=
 =?us-ascii?q?FARwQAgcIEgGJfQEDFRChVECKVxGBI4FtGAUBHIMJBYNgChknDQ1Kg0QBAQEBA?=
 =?us-ascii?q?QUBAQEBAQEBAQEXAgYSgxiCAoYkNYF+WYFhFxJBgmaCYQWBLQGedzoCgVCGBod?=
 =?us-ascii?q?6hHaCElqPeoYSg2CCU4gpFR+BFQINJ28/MiEkXhpcgVqCDyoNAREMGYFoJjYFh?=
 =?us-ascii?q?3NtgVMBAQE?=
X-IronPort-AV: E=Sophos;i="5.41,426,1498514400"; 
   d="scan'208,217";a="288348860"
Original-Received: from mail-ua0-f179.google.com ([209.85.217.179])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 25 Aug 2017 18:19:58 +0200
Original-Received: by mail-ua0-f179.google.com with SMTP id d12so1009199uag.0
        for <coq-club@inria.fr>; Fri, 25 Aug 2017 09:19:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=8/oerTK5GwN+9ObOyxf7RGXQMdCwqWX/8qAHWJWDjtw=;
        b=ps36aM+mkYF+UpEulcxOvwSJzHyRNkMuUjVbb5d2H0oK+miU2nUq1akcnsjpY0HBZd
         X13tF+r6QIXcmGat3uy0ETIbwg9P7NIXKArCZHrH6/5/W36mheF4+28utvIx8QIHpLH8
         p8Q7GtnwXiVVeZe8RNb7TtFy7UYkVqhNiQL7ztzgADK7kmsrGoZvb1L0MapYQ2ZVwt3K
         SEqxJ/2T71qMi9QKnKN7O5a5Anl3xhCXxjXq/E1hr36uUQLsjsHX0b8L7z9acGBCMs61
         s5yvd2A1Tk9h//sr8tyupn25kwFKxliZDFzGDqeBtDuOC7WoDrvhU6Oh0QMmb7N9jAQK
         Bm2A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=8/oerTK5GwN+9ObOyxf7RGXQMdCwqWX/8qAHWJWDjtw=;
        b=p1gK1eaxXJfUOxgPp58GZIVbSHkegWJxRmvW5amicYyu5pZpZs/XH1sBdOwDbSuTOT
         OTUlvz5zpeTdgm3StBiNOQU+hBtIpm7MUd2IRQLZVVOfbykNp+4Z4ZP3N0dxrNSwtD9q
         u0c7IBY6sxkqYbwZ2VlS6yx83WctABG3W/XOAescDvLk7n9iPhSnIzkngAhGOEI4WSb6
         /CittLIxLL4zYJpMWtv/B4QhB+tQNpk/BCXKWpd9a8FIcxn4Q1mXIu1KV4iswUIlme9I
         CY1kjzy9QzEPY++a8b/bQrrbDZ8sSEWbBmQP47Xkk/VesqUp54WjxJLV8C/XTrck+6VE
         LxXQ==
X-Gm-Message-State: AHYfb5iiTLFA18X8QIcywkwDnWq4E2rZ21mNtyDwo6a/l4qA1stuoy5b
	rr71ic2Aiux4opt1m9P0qIUdogpx+g==
X-Received: by 10.159.35.2 with SMTP id 2mr6893204uae.8.1503677997529; Fri, 25
 Aug 2017 09:19:57 -0700 (PDT)
Original-Received: by 10.159.50.8 with HTTP; Fri, 25 Aug 2017 09:19:56 -0700 (PDT)
Original-Received: by 10.159.50.8 with HTTP; Fri, 25 Aug 2017 09:19:56 -0700 (PDT)
In-Reply-To: <CANqbe0VeGgLVN61sJqvxU1cCEKBoYPKMCqQmg9Sywq-yLYDXfw@mail.gmail.com>
X-Loop: coq-club@inria.fr
X-Sequence: 15107
Errors-to: coq-club-owner@inria.fr
Precedence: list
Precedence: bulk
Original-Sender: coq-club-request@inria.fr
X-no-archive: yes
List-Id: <coq-club.inria.fr>
List-Archive: <http://sympa.inria.fr/sympa/arc/coq-club>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Owner: <mailto:coq-club-request@inria.fr>
List-Post: <mailto:coq-club@inria.fr>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20coq-club>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20coq-club>
X-Gmane-Expiry: 2017-09-08
Xref: news.gmane.org gmane.science.mathematics.logic.coq.club:19613 gmane.science.mathematics.discrete:12268 gmane.science.mathematics.categories:9304
Archived-At: <http://permalink.gmane.org/gmane.science.mathematics.logic.coq.club/19613>

--001a113d069ae64014055796501d
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Is it just me or does anybody else also thinks that the emails from
1337777.OOO lack a little bit of context?

Em 25 de ago de 2017 8:38 AM, "1337777.OOO" <1337777.ooo@gmail.com>
escreveu:

Proph

https://gitlab.com/1337777/cartier/blob/master/cartierSolution2.v

solves half of some question of Cartier which is how to program
grammatical meta (metafunctors) ...

Outline : Primo, it is sufficient for now to touch only
product-preserving retractive reflection into subgraph instead of
metafunctors-grammar localization ( <=3D> "Galois-topology"  <=3D>
"universal closure operations" <=3D?> "calculus of fractions" <=3D>
"special factorization systems" ); the case of finite-limit will
require some new elimination-scheme (?diaconescu-scheme?) which may
still-be avoided for the purely-computational questions : the cone
property and pairing-through-the-limit-subobject property are
corresponding logical properties/invariants which may be erased.
Secondo, it is possible for now to verify by pencil-and-paper (+) that
these terminating reduction relations satisfy local confluence
(commutation of basic reductions) by discovering-and-appending
whatever derivable solution-conversions lemma are needed and (++) that
this solution terminology permit the derivability of the
associativity-conversion. Therefore relative-decidability of the
(data) coherence question (sameness-of-arrows) will follow from this
cut-elimination, although the (logical) theoremhood question
(presence-of-arrow) is lost. Tertio, the coreflection (right adjoint)
is some (invisible) inclusion functor, such that the reflection is
some endofunctor inside one single graph. Also the
reverse-isomorphisms for expressing the retraction (reversibility of
the counit-morphism and more) and the product-preservation
(reversibility of those pairings-morphisms which arise from the known
computation of the product inside the subreflective subgraph) are
explicit data :

| ( 'RevCoUnit o>Mod (f : 'CoMod(0 Reflection0 (Reflection0 A1) ~>
Reflection0 A2 )0) )   :   'CoMod(0 Reflection0 A1 ~> Reflection0 A2
)0

| ( (f : 'CoMod(0 Reflection0 L ~> Reflection0 (Limit (Reflection0 A1)
(Reflection0 A2)) )0) o>Mod 'RevLimit1Unit )   :   'CoMod(0
Reflection0 L ~> Reflection0 (Limit A1 A2) )0

Quarto, the resolution/cut-elimination now proceeds by two phases :
(+) first into some intermediate-solution, where only the
subgraph-projection morphisms are eliminated and (++) then into some
final-solution where also the subgraph-pairing morphisms are
eliminated. Again the formulation is such that all the senses/semantic
of =C2=AB product-preserving retractive reflection =C2=BB is still-expressi=
ble
in the terminology of the solution, and any more needed derivable
solution-conversion will be discovered-and-appended during the local
confluence deduction. And the degradation lemma is more technical :
(+) the choice of the grades for the morphisms is more constrained
such that some two-phases-resolution is now required (++) and for the
pairings-morphisms, on shall require simultaneous/parametric full
reduction of every reductible morphisms in the pairings. This COQ
program and deduction is mostly automated, and is necessary instead of
pencil-and-paper if there are no prior expectations.

Keywords : 1337777.OOO//cartierSolution2.v ; metafunctors-grammar ;
localization

POSTSCRIPT : the earlier file [[1337777.OOO//cartierSolution.v]] shall
not have the hidden cut PolyMetaTransf in the final solution, for sure
:

| View1 a : 'Modos(0 (View0 A) ~> (View0 A') )0

| PolyMetaFunctor func1 x : 'Modos(0 (View0 A) ~> (MetaFunctor func1) )0)

| f o>Modos_ transf : 'Modos(0 (View0 A) ~> (MetaFunctor func'1) )0)

| [[ v_ ]] : 'Modos(0 (MetaFunctor func1) ~> F )0


-----8<-----

Breaking News :

https://gitlab.com/1337777/maclane/blob/master/maclaneSolution.svg

shows how my mom has discovered "independently" that her associations
pentagon is some recursive square (word-normalization functor). Now
will you (yes, you) cite my mom ?


----->8-----

Proph

http://ethereum.github.io/browser-solidity/#gist=3D89b4ee8d3ee
4e50299323ed2c6305daf
http://swarm-gateways.net/bzz:/0eb425a28278cec83a76ed1fe924f
777cab9c81417846a598416d76a1da30acf

solves my earlier question which is how to measure reviews/citations
by using public programmatic proxy-authors =C2=AB pprogxy =C2=BB ( "ethereu=
m
blockchain cryptographic smart-contract" ) ; and also calls-for-papers
[CFP] for the "formal verification" of these pprogxies , where the
chosen reviews/citations-metric is through these same pprogxies !?1!

Outline : Primo, "review" and "citation" is the same thing and shall
be costly and is similar to some current/currency/token. Secondo, the
question of initialization (which is external) shall be de-coupled
from the question of logic/current (which is internal) : the current
is viewed through both basic-marketmulti-initialization and
inductive/recursive/feedback-initialization. Tertio, reviews/citations
is similar to some current/currency/token which flows downward from
younger document-nodes to older document-nodes (which may refuse to
receive/stake some too-diluted citation/token). Any document-node
("editor") which lastly-possesses some tokens, may sink/burn/erase
these tokens into another upward (younger) document-node ("author"),
which may mint/create/faucet only-half of those sinked-tokens on
behalf of any other newly-created document-node ("reviewer")
citing/towards it. Some record of all these transactions (sink or
faucet or cite or mere-transfer) is memorized via internal storage and
external log/trace events, such that after inputing some
dilution-percentage of initially-sinked tokens at existing
document-nodes then oneself may compute the dilution-percentage of the
balance at each document-node and may compute the real-measure (ratio
of sinked diluted-tokens over fauceted diluted-tokens) at each
document-node. Finally some archive tool may integrate the common
metadata content-address ("SHA hash") of each document-node along
another content-addressable replicated-storage tool ("swarm DHT").

Alternative : Another initialization may simply-be to assume that the
user-addresses (from some constant list) who own document-nodes are
non-interdependent and then either (+) to prevent self-citation or (+)
to limit the total number of new document-nodes created by each
particular user-address (and later
externally-iteratively/inductive-update these particular numbers). But
non-interdependence is rare :
[[http://retractionwatch.com/2017/08/22/one-way-boost-unis-r
anking-ask-faculty-cite/]]
[[https://scholarlykitchen.sspnet.org/2017/08/03/transparent
-peer-review-mean-important/]]
... and it is common that reviewers flip-flop between : (
monetarist-or-tribalistic ) =C2=AB possibility =C2=BB ( "discretion" )   ve=
rsus
 ( monetarist-or-tribalistic ) =C2=AB copy-me grade =C2=BB ( "CV" , "object=
ive"
, refuse to be subjective-under-teaching ) ...

Formal verification : There are many alternatives from attempting to
verify the intermediate-level assembly code. Primo, the transactions
basic-accounting may be verified, where the high-level source-code
already-is the specification. Secondo, the complex mathematical
algorithms may be verified, where this verification is no-longer
particular to the ethereum-virtual-machine. Tertio, that the hidden
high-level source-code does compile to the public
ethereum-virtual-machine-opcode/bytecode stored inside the blockchain,
may be verified simply-by making this high-level source-code public.
Quarto, practical-engineering hacks/sidechannels may only be
verified-and-corrected over some long-time testing with
smaller-stakes.

EASY REGISTRATION : Primo, download Chrome Metamask extension
[[google.com/#q=3DChrome+Metamask]] , select "Ropsten Test Net" , create
new key , click "Buy" to get test tokens. Secondo, in the above
"Browser Solidity" source-code page , select "Injected Web3"
Environment , parse/compile and click "At Address for =C2=A2entseCurrent"
and input : 0xc7c6a7b7d396388127ce6140b39ca1eff3beb07b . Tertio, post
the new review text in the above "Swarm Gateways" and get the
content-address hash. Quarto, register this review metadata as some
new pprogxy for the Centse currency.


-----

eth 0x54810dcb93b37DBE874694407f78959Fa222D920 , paypal
1337777.OOO@gmail.com , wechatpay 2796386464@qq.com , irc #OOO1337777

--001a113d069ae64014055796501d
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto"><div>Is it just me or does anybody else also thinks that =
the emails from 1337777.OOO lack a little bit of context?<br><div class=3D"=
gmail_extra"><br><div class=3D"gmail_quote">Em 25 de ago de 2017 8:38 AM, &=
quot;1337777.OOO&quot; &lt;<a href=3D"mailto:1337777.ooo@gmail.com" target=
=3D"_blank">1337777.ooo@gmail.com</a>&gt; escreveu:<br type=3D"attribution"=
><blockquote class=3D"m_-6179280120171842808quote" style=3D"margin:0 0 0 .8=
ex;border-left:1px #ccc solid;padding-left:1ex">Proph<br>
<br>
<a href=3D"https://gitlab.com/1337777/cartier/blob/master/cartierSolution2.=
v" rel=3D"noreferrer" target=3D"_blank">https://gitlab.com/1337777/car<wbr>=
tier/blob/master/cartierSoluti<wbr>on2.v</a><br>
<br>
solves half of some question of Cartier which is how to program<br>
grammatical meta (metafunctors) ...<br>
<br>
Outline : Primo, it is sufficient for now to touch only<br>
product-preserving retractive reflection into subgraph instead of<br>
metafunctors-grammar localization ( &lt;=3D&gt; &quot;Galois-topology&quot;=
=C2=A0 &lt;=3D&gt;<br>
&quot;universal closure operations&quot; &lt;=3D?&gt; &quot;calculus of fra=
ctions&quot; &lt;=3D&gt;<br>
&quot;special factorization systems&quot; ); the case of finite-limit will<=
br>
require some new elimination-scheme (?diaconescu-scheme?) which may<br>
still-be avoided for the purely-computational questions : the cone<br>
property and pairing-through-the-limit-subo<wbr>bject property are<br>
corresponding logical properties/invariants which may be erased.<br>
Secondo, it is possible for now to verify by pencil-and-paper (+) that<br>
these terminating reduction relations satisfy local confluence<br>
(commutation of basic reductions) by discovering-and-appending<br>
whatever derivable solution-conversions lemma are needed and (++) that<br>
this solution terminology permit the derivability of the<br>
associativity-conversion. Therefore relative-decidability of the<br>
(data) coherence question (sameness-of-arrows) will follow from this<br>
cut-elimination, although the (logical) theoremhood question<br>
(presence-of-arrow) is lost. Tertio, the coreflection (right adjoint)<br>
is some (invisible) inclusion functor, such that the reflection is<br>
some endofunctor inside one single graph. Also the<br>
reverse-isomorphisms for expressing the retraction (reversibility of<br>
the counit-morphism and more) and the product-preservation<br>
(reversibility of those pairings-morphisms which arise from the known<br>
computation of the product inside the subreflective subgraph) are<br>
explicit data :<br>
<br>
| ( &#39;RevCoUnit o&gt;Mod (f : &#39;CoMod(0 Reflection0 (Reflection0 A1) =
~&gt;<br>
Reflection0 A2 )0) )=C2=A0 =C2=A0:=C2=A0 =C2=A0&#39;CoMod(0 Reflection0 A1 =
~&gt; Reflection0 A2<br>
)0<br>
<br>
| ( (f : &#39;CoMod(0 Reflection0 L ~&gt; Reflection0 (Limit (Reflection0 A=
1)<br>
(Reflection0 A2)) )0) o&gt;Mod &#39;RevLimit1Unit )=C2=A0 =C2=A0:=C2=A0 =C2=
=A0&#39;CoMod(0<br>
Reflection0 L ~&gt; Reflection0 (Limit A1 A2) )0<br>
<br>
Quarto, the resolution/cut-elimination now proceeds by two phases :<br>
(+) first into some intermediate-solution, where only the<br>
subgraph-projection morphisms are eliminated and (++) then into some<br>
final-solution where also the subgraph-pairing morphisms are<br>
eliminated. Again the formulation is such that all the senses/semantic<br>
of =C2=AB product-preserving retractive reflection =C2=BB is still-expressi=
ble<br>
in the terminology of the solution, and any more needed derivable<br>
solution-conversion will be discovered-and-appended during the local<br>
confluence deduction. And the degradation lemma is more technical :<br>
(+) the choice of the grades for the morphisms is more constrained<br>
such that some two-phases-resolution is now required (++) and for the<br>
pairings-morphisms, on shall require simultaneous/parametric full<br>
reduction of every reductible morphisms in the pairings. This COQ<br>
program and deduction is mostly automated, and is necessary instead of<br>
pencil-and-paper if there are no prior expectations.<br>
<br>
Keywords : 1337777.OOO//cartierSolution2.<wbr>v ; metafunctors-grammar ; lo=
calization<br>
<br>
POSTSCRIPT : the earlier file [[1337777.OOO//cartierSolution<wbr>.v]] shall=
<br>
not have the hidden cut PolyMetaTransf in the final solution, for sure<br>
:<br>
<br>
| View1 a : &#39;Modos(0 (View0 A) ~&gt; (View0 A&#39;) )0<br>
<br>
| PolyMetaFunctor func1 x : &#39;Modos(0 (View0 A) ~&gt; (MetaFunctor func1=
) )0)<br>
<br>
| f o&gt;Modos_ transf : &#39;Modos(0 (View0 A) ~&gt; (MetaFunctor func&#39=
;1) )0)<br>
<br>
| [[ v_ ]] : &#39;Modos(0 (MetaFunctor func1) ~&gt; F )0<br>
<br>
<br>
-----8&lt;-----<br>
<br>
Breaking News :<br>
<br>
<a href=3D"https://gitlab.com/1337777/maclane/blob/master/maclaneSolution.s=
vg" rel=3D"noreferrer" target=3D"_blank">https://gitlab.com/1337777/mac<wbr=
>lane/blob/master/maclaneSoluti<wbr>on.svg</a><br>
<br>
shows how my mom has discovered &quot;independently&quot; that her associat=
ions<br>
pentagon is some recursive square (word-normalization functor). Now<br>
will you (yes, you) cite my mom ?<br>
<br>
<br>
-----&gt;8-----<br>
<br>
Proph<br>
<br>
<a href=3D"http://ethereum.github.io/browser-solidity/#gist=3D89b4ee8d3ee4e=
50299323ed2c6305daf" rel=3D"noreferrer" target=3D"_blank">http://ethereum.g=
ithub.io/brow<wbr>ser-solidity/#gist=3D89b4ee8d3ee<wbr>4e50299323ed2c6305da=
f</a><br>
<a href=3D"http://swarm-gateways.net/bzz:/0eb425a28278cec83a76ed1fe924f777c=
ab9c81417846a598416d76a1da30acf" rel=3D"noreferrer" target=3D"_blank">http:=
//swarm-gateways.net/bzz:<wbr>/0eb425a28278cec83a76ed1fe924f<wbr>777cab9c81=
417846a598416d76a1da<wbr>30acf</a><br>
<br>
solves my earlier question which is how to measure reviews/citations<br>
by using public programmatic proxy-authors =C2=AB pprogxy =C2=BB ( &quot;et=
hereum<br>
blockchain cryptographic smart-contract&quot; ) ; and also calls-for-papers=
<br>
[CFP] for the &quot;formal verification&quot; of these pprogxies , where th=
e<br>
chosen reviews/citations-metric is through these same pprogxies !?1!<br>
<br>
Outline : Primo, &quot;review&quot; and &quot;citation&quot; is the same th=
ing and shall<br>
be costly and is similar to some current/currency/token. Secondo, the<br>
question of initialization (which is external) shall be de-coupled<br>
from the question of logic/current (which is internal) : the current<br>
is viewed through both basic-marketmulti-initializati<wbr>on and<br>
inductive/recursive/feedback-i<wbr>nitialization. Tertio, reviews/citations=
<br>
is similar to some current/currency/token which flows downward from<br>
younger document-nodes to older document-nodes (which may refuse to<br>
receive/stake some too-diluted citation/token). Any document-node<br>
(&quot;editor&quot;) which lastly-possesses some tokens, may sink/burn/eras=
e<br>
these tokens into another upward (younger) document-node (&quot;author&quot=
;),<br>
which may mint/create/faucet only-half of those sinked-tokens on<br>
behalf of any other newly-created document-node (&quot;reviewer&quot;)<br>
citing/towards it. Some record of all these transactions (sink or<br>
faucet or cite or mere-transfer) is memorized via internal storage and<br>
external log/trace events, such that after inputing some<br>
dilution-percentage of initially-sinked tokens at existing<br>
document-nodes then oneself may compute the dilution-percentage of the<br>
balance at each document-node and may compute the real-measure (ratio<br>
of sinked diluted-tokens over fauceted diluted-tokens) at each<br>
document-node. Finally some archive tool may integrate the common<br>
metadata content-address (&quot;SHA hash&quot;) of each document-node along=
<br>
another content-addressable replicated-storage tool (&quot;swarm DHT&quot;)=
.<br>
<br>
Alternative : Another initialization may simply-be to assume that the<br>
user-addresses (from some constant list) who own document-nodes are<br>
non-interdependent and then either (+) to prevent self-citation or (+)<br>
to limit the total number of new document-nodes created by each<br>
particular user-address (and later<br>
externally-iteratively/inducti<wbr>ve-update these particular numbers). But=
<br>
non-interdependence is rare :<br>
[[<a href=3D"http://retractionwatch.com/2017/08/22/one-way-boost-unis-ranki=
ng-ask-faculty-cite/" rel=3D"noreferrer" target=3D"_blank">http://retractio=
nwatch.com/2<wbr>017/08/22/one-way-boost-unis-r<wbr>anking-ask-faculty-cite=
/</a>]]<br>
[[<a href=3D"https://scholarlykitchen.sspnet.org/2017/08/03/transparent-pee=
r-review-mean-important/" rel=3D"noreferrer" target=3D"_blank">https://scho=
larlykitchen.ssp<wbr>net.org/2017/08/03/transparent<wbr>-peer-review-mean-i=
mportant/</a>]]<br>
... and it is common that reviewers flip-flop between : (<br>
monetarist-or-tribalistic ) =C2=AB possibility =C2=BB ( &quot;discretion&qu=
ot; )=C2=A0 =C2=A0versus<br>
=C2=A0( monetarist-or-tribalistic ) =C2=AB copy-me grade =C2=BB ( &quot;CV&=
quot; , &quot;objective&quot;<br>
, refuse to be subjective-under-teaching ) ...<br>
<br>
Formal verification : There are many alternatives from attempting to<br>
verify the intermediate-level assembly code. Primo, the transactions<br>
basic-accounting may be verified, where the high-level source-code<br>
already-is the specification. Secondo, the complex mathematical<br>
algorithms may be verified, where this verification is no-longer<br>
particular to the ethereum-virtual-machine. Tertio, that the hidden<br>
high-level source-code does compile to the public<br>
ethereum-virtual-machine-opcod<wbr>e/bytecode stored inside the blockchain,=
<br>
may be verified simply-by making this high-level source-code public.<br>
Quarto, practical-engineering hacks/sidechannels may only be<br>
verified-and-corrected over some long-time testing with<br>
smaller-stakes.<br>
<br>
EASY REGISTRATION : Primo, download Chrome Metamask extension<br>
[[<a href=3D"http://google.com/#q=3DChrome+Metamask" rel=3D"noreferrer" tar=
get=3D"_blank">google.com/#q=3DChrome+Metamas<wbr>k</a>]] , select &quot;Ro=
psten Test Net&quot; , create<br>
new key , click &quot;Buy&quot; to get test tokens. Secondo, in the above<b=
r>
&quot;Browser Solidity&quot; source-code page , select &quot;Injected Web3&=
quot;<br>
Environment , parse/compile and click &quot;At Address for =C2=A2entseCurre=
nt&quot;<br>
and input : 0xc7c6a7b7d396388127ce6140b39c<wbr>a1eff3beb07b . Tertio, post<=
br>
the new review text in the above &quot;Swarm Gateways&quot; and get the<br>
content-address hash. Quarto, register this review metadata as some<br>
new pprogxy for the Centse currency.<br>
<br>
<br>
-----<br>
<br>
eth 0x54810dcb93b37DBE874694407f78<wbr>959Fa222D920 , paypal<br>
<a href=3D"mailto:1337777.OOO@gmail.com" target=3D"_blank">1337777.OOO@gmai=
l.com</a> , wechatpay <a href=3D"mailto:2796386464@qq.com" target=3D"_blank=
">2796386464@qq.com</a> , irc #OOO1337777<br>
</blockquote></div><br></div></div></div>

--001a113d069ae64014055796501d--

